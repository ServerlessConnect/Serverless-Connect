/* 
Copyright 2023, Serverless Connect
All applicable matarial structure are Intellectual property of Serverless Connect.
https://www.serverlessconnect.com/
Updated - 03/Jul/2023  
Latest Version - 1.23.7.1
*/

var _0x1e1102 = _0x660c; (function (_0x5509c4, _0x528a4b) { var _0x5c208d = _0x660c; var _0x2f1df2 = _0x5509c4(); while (!![]) { try { var _0x3b4fdd = parseInt(_0x5c208d(0x194)) / 0x1 * (parseInt(_0x5c208d(0x15b)) / 0x2) + -parseInt(_0x5c208d(0x1a9)) / 0x3 + -parseInt(_0x5c208d(0x126)) / 0x4 * (parseInt(_0x5c208d(0x144)) / 0x5) + parseInt(_0x5c208d(0x180)) / 0x6 * (parseInt(_0x5c208d(0x124)) / 0x7) + parseInt(_0x5c208d(0x1b3)) / 0x8 * (parseInt(_0x5c208d(0x151)) / 0x9) + parseInt(_0x5c208d(0x167)) / 0xa + -parseInt(_0x5c208d(0x1a8)) / 0xb; if (_0x3b4fdd === _0x528a4b) { break; } else { _0x2f1df2['push'](_0x2f1df2['shift']()); } } catch (_0x175bce) { _0x2f1df2['push'](_0x2f1df2['shift']()); } } }(_0x1040, 0xa4d29)); const cache = caches[_0x1e1102(0x14c)]; const spl = _0x1e1102(0x169); const mimeURL = 'https://production.serverlessconnect.com/v1.2/file/mime-types'; const cacheMapURL = 'https://production.serverlessconnect.com/' + spl; var css = _0x1e1102(0x1a7); var cloud = {}; const uikit = _0x1e1102(0x190); const flid = _0x1e1102(0x19a); const return_as_file = [_0x1e1102(0x149), 'jpeg', _0x1e1102(0x160)]; const return_base64 = []; function _0x1040() { var _0x8f2f1d = ['subtle', 'get', 'jpg', 'content-type', 'value', 'default', 'length', 'join', 'Request\x20Failed.', 'info', '9wkxoCO', 'decrypt', 'raw', 'Failed', 'charCodeAt', 'fetch', 'respond:', 'number', 'route', 'random', '2dRHTai', 'You\x20are\x20not\x20allowed\x20!', 'clientAcceptEncoding', 'fromCharCode', 'tlsCipher', 'mp4', 'keys', 'allow:', 'round', 'meta', 'function', 'startsWith', '8300730tmpXPl', 'entries', 'api/authenticate', 'parse', 'edgeRequestKeepAliveStatus', 'encrypt', 'cf-ipcountry', 'slice', 'char', '~cacheMap', 'lwi3u96fxsEMaEhxfBczTwkdgXiTrg4Vzo1hqyTqvG12cv9MH5llGRHOpwO3Fik8C8ILqSdgHUBEwrxHLvUs2cL1F4qGpGwN0KkSKrjGDugyzTJ85tDiOzh2HLKEaRfmYItwGmw2g17FgodOag6IEJ0nq9ZVsV2TBjOs3ioYcCLoGIg9WmNBa4aNE1vdmdNIrRYva0XsLA2DTrgyGVuC4CNHdpSyxTfaOikk8jzyd0ouDz34hXHXfsVYbCSIPPolC2F3imiRG48AjQB2tbVUNBYWgXBxzgpdArTyAgUZEJZFKBL1rCBmEtCOFHLlQ6QmYPQX1Uv8y5nRjj6OGWoTNc6ftPvJWs8OowViWAnqiGKaeOBCFb8HiKPMWA2oCflqWehduG0hpkM7CpZep2PIxrIH6PnZbnUuh9eGDv7zBGxZOasQ9J7vtVKJExGV9vy2vdameDJOW4RpVbleiYTZGUFqjVa4TfBj9xHdEWtifiB64G5ECZqh4K3BQ06DUQDoeh1lI9j2fYIFe6XNyv7GzAoBBVlfKrthyDCRA17O4KBPoEopcqM4xYomfpP8RswIrAbYIB5tAyOpwrqAvTfxzWn6z6ABoGp9JDZdtpgnlo4xglev48V6qtekHdAgW1Za1ipCZh0suc1gfMysgk9Rc7aZDBhpoAkbotciDteF5V8dz2jtG3BTc6ZHPerFC92Hn5cNsAfN29H6A3DxeOu4fRQ1Iqa2k10wgEBi4l0NTwCRUT75iZHiV5TMi8BtFioJLfzrs3aF98b4vD4tkg52ZcdPRpXR8W8Qp0xtarVBHfe6wUCGnlhY8KjpAlaVObj9Jp0ihNV4tanzvfJ65RwrGpbi4HhvVYFZuZWSLQtYIueDXJwvcIYJr7JxZf0a0vV24FcDq2MUS5fVrlavh9nRaHwQxUSOZWOKk8uPkGpoBkrcYXRw4WhlO8yqseiFlJwzfmkaEBHBDyy0SWfbmrhydRQTijFQqGxDkYzrnLbr7uBRufY4w9yo2P6dgGhVyl1P', 'endsWith', 'forEach', 'put', 'cf-connecting-ip', 'base64', 'split', 'request', 'file', 'method', '.workers.dev', 'metadata', 'pathname', 'finished:blocked=', 'other', '222QtHBbJ', 'tlsExportedAuthenticator', 'AES-GCM', 'match', 'redirect', 'stringify', 'POST', '~system/banned/', 'includes', 'editable', 'toUpperCase', 'country', 'text/html', 'public,\x20max-age=', '0123456789', 'substr', 'authkey', 'Listed', 'tlsClientAuth', 'prefix', '1262869WCAFMB', 'fromEntries', 'list_complete', 'replace', '~system-mime-types', 'expirationTtl', 'https://production.serverlessconnect.com/api/check/domain', 'floor', 'key', '~login-success|', 'encode', '/admin', 'text', 'reverse', '<meta\x20charset=\x27UTF-8\x27>\x20<meta\x20name=\x27viewport\x27\x20content=\x27width=device-width,\x20initial-scale=1\x27><div\x20style=\x27display:flex;height:90vh;align-items:center;justify-content:center;flex-direction:column\x27><h3\x20style=\x27color:orangered;margin:0\x27>\x20KV\x20Connection\x20Failed\x20!\x20E-001\x20</h3><p\x20style=\x27margin:0;text-align:\x20center;\x20color:\x20silver;\x27>Create\x20a\x20KV\x20and\x20bind\x20to\x20worker\x20by\x20the\x20name\x20\x27cloudHosting\x27\x20.</p></div>', 'digest', 'importKey', 'getWithMetadata', '|and\x20-\x20blocked:', 'style', '15155635ptTlfR', '1849689DHIRsG', 'validate', 'token', 'txt', 'application/javascript', 'push', 'substring', '</head><body><div\x20style=\x27width:100%;height:90vh;display:flex;flex-direction:column;justify-content:center;align-items:center\x27><h1\x20style=\x27margin:\x200;\x20color:\x20limegreen;\x20\x27>Serverless\x20Connect</h1>\x20<p\x20style=\x27margin:\x200;font-size:18px\x27>\x20Connect\x20to\x20the\x20world.</p><br/><a\x20href=\x27/admin\x27><button\x20style=\x27padding:10px\x2050px;border-radius:5px;min-width:120px;cursor:pointer;background-color:greenyellow;border:\x202px\x20solid\x20whitesmoke;\x27>Start\x20Admin</button></a></div>\x20\x20<div\x20style=\x27position:fixed;bottom:10px;margin:10px;\x27\x20><a\x20target=_blank\x20href=\x27https://serverlessconnect.com/privacy\x27>Privacy\x20Policy</a>\x20<a\x20target=_blank\x20href=\x27https://serverlessconnect.com/cookies.html\x27>Cookies</a>\x20</div></body>\x20<script\x20async\x20src=\x27https://www.googletagmanager.com/gtag/js?id=G-ZSKGYYKNR0\x27></script>\x20<script>\x20window.dataLayer\x20=\x20window.dataLayer\x20||\x20[];\x20function\x20gtag(){dataLayer.push(arguments);}\x20gtag(\x27js\x27,\x20new\x20Date());\x20gtag(\x27config\x27,\x20\x27G-ZSKGYYKNR0\x27);\x20</script>\x20</html>', 'list', 'SHA-256', '2657984wABtjm', 'extension', 'set', 'type', '<html<head>', 'firewall', '(!)', 'Updated', '<$CSapi>', 'Uploaded', '50337nPMCki', 'headers', '16ntSLUT', '/index.html', 'hostname', '<title>Serverless\x20Connect</title>\x20<meta\x20charset=\x22UTF-8\x22>\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1\x22>\x20<link\x20rel=\x22icon\x22\x20type=\x22image/x-icon\x22\x20href=\x22https://production.serverlessconnect.com/v1.2/img/logo-64.png\x22>', 'map', '</$CSred>', 'json', 'a\x20file', 'indexOf', 'formData', 'respondWith', 'path', 'getTime', 'application/json', ',\x20s-maxage=', 'routes', 'getRandomValues', 'public,\x20max-age=0,\x20s-maxage=0', '/nocache/*', 'form', 'from', 'https://production.serverlessconnect.com/api/authenticate', 'ttl', 'requestPriority', 'trim', '</$CSapi>', 'Fetched', 'charAt', '<$>request\x20headers\x20api</$>', 'config', '27245Ubljdo', '<$>geolocation\x20api</$>', 'log']; _0x1040 = function () { return _0x8f2f1d; }; return _0x1040(); } var cacheRequest = !![]; var cachingMap = { 'routes': [{ 'route': _0x1e1102(0x138), 'ttl': 0x0 }], 'extension': { 'js': 0x0, 'css': 0x0, 'png': 0xe10, 'jpg': 0xe10 } }; var fwwR = null; addEventListener(_0x1e1102(0x156), _0xe00688 => { var _0x330be2 = _0x1e1102; _0xe00688[_0x330be2(0x130)](handleRequest(_0xe00688[_0x330be2(0x178)])['catch'](_0x320b3f => new Response(_0x330be2(0x14f), { 'status': 0x193 }))); }); async function handleRequest(_0x1cdaed) { var _0x18574c = _0x1e1102; const { protocol: _0x1ac8eb, pathname: _0x2333ce, hostname: _0x3eca4a, searchParams: _0x360f38, search: _0x30a05f } = new URL(_0x1cdaed['url']); var _0x387f1c, _0x126ad8; try { if (_0x1cdaed[_0x18574c(0x17a)] == _0x18574c(0x186)) { var _0x14a04c = await _0x1cdaed['text'](); _0x387f1c = new URLSearchParams(_0x14a04c); if (_0x1cdaed[_0x18574c(0x125)][_0x18574c(0x148)]('content-type')[_0x18574c(0x188)](_0x18574c(0x139))) { var _0x14a04c = {}; for (const _0x343596 of _0x387f1c['entries']()) { _0x14a04c[_0x343596[0x0]] = _0x343596[0x1]; } } } } catch (_0x1acc69) { } try { if (_0x2333ce[_0x18574c(0x166)]('/admin/')) { if (_0x3eca4a[_0x18574c(0x12e)](_0x18574c(0x17b)) > -0x1) { if (_0x1cdaed[_0x18574c(0x17a)] == _0x18574c(0x186)) { if (await gb(_0x1cdaed) == ![]) { var _0x5995fe = await uiUx(_0x387f1c[_0x18574c(0x148)](_0x18574c(0x1ab)) ? _0x387f1c['get'](_0x18574c(0x1ab)) : '', _0x3eca4a, _0x1cdaed); if (_0x5995fe === ![]) { await cloudHosting[_0x18574c(0x174)]('~system/banned/' + _0x1cdaed[_0x18574c(0x125)][_0x18574c(0x148)](_0x18574c(0x175)), await enct(JSON[_0x18574c(0x185)](Object[_0x18574c(0x195)](_0x1cdaed['headers']))), { 'expirationTtl': 0x12c }); return new Response(JSON['stringify']({ 'ok': ![] }), { 'headers': { 'Content-Type': 'application/json' }, 'status': 0xc8 }); } else if (_0x5995fe['ok'] === !![]) { let _0x46d0a6 = '$'; var _0x4647c1 = _0x3eca4a + '*' + _0x3eca4a[_0x18574c(0x177)]('.')['slice'](0x1)[_0x18574c(0x14e)]('.') + '*' + _0x1cdaed['headers'][_0x18574c(0x148)](_0x18574c(0x175)) + '*' + _0x1cdaed[_0x18574c(0x125)][_0x18574c(0x148)](_0x18574c(0x16d)); const _0x203eaf = await dect(_0x5995fe['s'], _0x4647c1); let _0x19986b = _0x2333ce[_0x18574c(0x177)]('/admin/')[0x1]; let _0x125396 = JSON['parse'](_0x5995fe['r']); fwwR = JSON['parse'](await dect(_0x5995fe['f'], _0x4647c1)); if (css == _0x3eca4a) { css = '/'; _0x46d0a6 = css; } if (!_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))) { _0x387f1c[_0x18574c(0x1b5)](_0x18574c(0x131), _0x46d0a6); } else { _0x387f1c[_0x18574c(0x1b5)](_0x18574c(0x131), _0x387f1c['get']('path')['startsWith']('~') ? _0x387f1c[_0x18574c(0x148)](_0x18574c(0x131)) : _0x46d0a6 + _0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))); } if (!_0x387f1c[_0x18574c(0x148)](_0x18574c(0x193))) { _0x387f1c[_0x18574c(0x1b5)](_0x18574c(0x193), _0x46d0a6); } else { _0x387f1c[_0x18574c(0x1b5)](_0x18574c(0x193), _0x387f1c[_0x18574c(0x148)]('prefix')['startsWith']('~') ? _0x387f1c[_0x18574c(0x148)](_0x18574c(0x193)) : _0x46d0a6 + _0x387f1c[_0x18574c(0x148)]('prefix')); } _0x19986b = _0x19986b == _0x18574c(0x1aa) ? _0x19986b : await dect(decodeURIComponent(_0x19986b), _0x4647c1); switch (_0x19986b) { case await dect(_0x125396[0x0], _0x4647c1): return new Response(JSON[_0x18574c(0x185)]({ 'ok': !![], 'keywords': _0x125396 }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); break; case await dect(_0x125396[0x1], _0x4647c1): let _0x2c3be3 = await ik(_0x387f1c[_0x18574c(0x148)](_0x18574c(0x193)) ? _0x387f1c[_0x18574c(0x148)](_0x18574c(0x193)) : ''); return new Response(JSON[_0x18574c(0x185)]({ 'ok': !![], 'list': _0x2c3be3, 'status': _0x18574c(0x191) }), { 'headers': { 'Content-Type': 'application/json' }, 'status': 0xc8 }); break; case await dect(_0x125396[0x2], _0x4647c1): if (_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))) { var _0x4f318e = ''; var _0x74be8d = _0x18574c(0x18c); try { if (_0x387f1c[_0x18574c(0x148)]('path')[_0x18574c(0x12e)]('.') > -0x1) { _0x4f318e = _0x387f1c['get'](_0x18574c(0x131))['split']('.'); _0x4f318e = _0x4f318e[_0x18574c(0x1a1)]()[0x0]; } } catch (_0x3c127f) { } if (_0x4f318e == '' || _0x4f318e[_0x18574c(0x14d)] > 0x5) { } else { var _0x74be8d = JSON[_0x18574c(0x16a)](await cloudHosting['get']('~system-mime-types', { 'cacheTtl': 0xe10 })); _0x74be8d = _0x74be8d[_0x4f318e]; } var _0x4af8a2 = { 'metadata': { 'since': Math[_0x18574c(0x163)](new Date()[_0x18574c(0x132)]()), 'extension': _0x4f318e, 'mime': _0x74be8d, 'size': _0x387f1c[_0x18574c(0x148)](_0x18574c(0x179))[_0x18574c(0x14d)], 'base64': !![] } }; try { if (cloud['xs']['startsWith']('t')) { _0x4af8a2['expirationTtl'] = cloud['meta']; } } catch (_0x3e64f9) { } await cloudHosting['put'](_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131)), await enct(_0x387f1c[_0x18574c(0x148)](_0x18574c(0x179))), _0x4af8a2); return new Response(JSON['stringify']({ 'ok': !![], 'status': 'Uploaded' }), { 'headers': { 'Content-Type': 'application/json' }, 'status': 0xc8 }); } else { return new Response(JSON[_0x18574c(0x185)]({ 'ok': ![], 'status': _0x18574c(0x154) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } break; case await dect(_0x125396[0x3], _0x4647c1): var { value: _0x2e4cda, metadata: _0x54693d } = await cloudHosting[_0x18574c(0x1a5)](decodeURIComponent(_0x387f1c[_0x18574c(0x148)]('path'))); var _0x3f5383 = !![]; _0x54693d[_0x18574c(0x189)] = _0x3f5383; return new Response(JSON[_0x18574c(0x185)]({ 'ok': !![], 'metadata': _0x54693d, 'status': _0x18574c(0x140) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); break; case await dect(_0x125396[0x4], _0x4647c1): if (_0x387f1c['get'](_0x18574c(0x131))) { var _0x4f318e = _0x18574c(0x1ac); var _0x74be8d = _0x18574c(0x18c); try { if (_0x387f1c[_0x18574c(0x148)]('path')[_0x18574c(0x12e)]('.') > -0x1) { _0x4f318e = _0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))[_0x18574c(0x177)]('.'); _0x4f318e = _0x4f318e['reverse']()[0x0]; } } catch (_0x1c17d0) { } if (_0x4f318e == '' || _0x4f318e[_0x18574c(0x14d)] > 0x5) { } else { var _0x74be8d = JSON[_0x18574c(0x16a)](await cloudHosting[_0x18574c(0x148)](_0x18574c(0x198), { 'cacheTtl': 0xe10 })); _0x74be8d = _0x74be8d[_0x4f318e]; } var _0x4af8a2 = { 'metadata': { 'since': Math[_0x18574c(0x163)](new Date()[_0x18574c(0x132)]()), 'extension': _0x4f318e, 'mime': _0x74be8d, 'size': 0x1, 'base64': ![] } }; try { if (cloud['xs'][_0x18574c(0x166)]('t')) { _0x4af8a2['expirationTtl'] = cloud[_0x18574c(0x164)]; } } catch (_0x4d7521) { } await cloudHosting[_0x18574c(0x174)](_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131)), await enct('\x20'), _0x4af8a2); return new Response(JSON[_0x18574c(0x185)]({ 'ok': !![], 'status': 'Uploaded' }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } else { return new Response(JSON[_0x18574c(0x185)]({ 'ok': ![], 'status': _0x18574c(0x154) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } break; case await dect(_0x125396[0x5], _0x4647c1): try { await cloudHosting['delete'](decodeURIComponent(_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131)))); return new Response(JSON['stringify']({ 'ok': !![], 'status': 'Deleted' }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } catch (_0x2e1cb1) { return new Response(JSON[_0x18574c(0x185)]({ 'ok': ![], 'status': _0x18574c(0x154) }), { 'headers': { 'Content-Type': 'application/json' }, 'status': 0xc8 }); } break; case await dect(_0x125396[0x6], _0x4647c1): var _0x2e4cda = await dect(await cloudHosting[_0x18574c(0x148)](decodeURIComponent(_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))))); return new Response(JSON[_0x18574c(0x185)]({ 'ok': !![], 'value': _0x2e4cda, 'status': _0x18574c(0x140) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); break; case await dect(_0x125396[0x7], _0x4647c1): if (_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))) { var _0x4f318e = 'js'; var _0x74be8d = _0x18574c(0x1ad); try { if (_0x387f1c['get'](_0x18574c(0x131))[_0x18574c(0x12e)]('.') > -0x1) { _0x4f318e = _0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))[_0x18574c(0x177)]('.'); _0x4f318e = _0x4f318e[_0x18574c(0x1a1)]()[0x0]; } } catch (_0x579b07) { } if (_0x4f318e == '' || _0x4f318e[_0x18574c(0x14d)] > 0x5) { } else { var _0x74be8d = JSON[_0x18574c(0x16a)](await cloudHosting[_0x18574c(0x148)](_0x18574c(0x198), { 'cacheTtl': 0xe10 })); _0x74be8d = _0x74be8d[_0x4f318e]; } var _0x4af8a2 = { 'metadata': { 'since': Math[_0x18574c(0x163)](new Date()['getTime']()), 'extension': _0x4f318e, 'mime': _0x74be8d, 'size': 0x1, 'base64': ![], 'func': !![] } }; try { if (cloud['xs'][_0x18574c(0x166)]('t')) { _0x4af8a2[_0x18574c(0x199)] = cloud[_0x18574c(0x164)]; } } catch (_0xeae361) { } await cloudHosting['put'](_0x387f1c[_0x18574c(0x148)]('path'), await enct('\x20'), _0x4af8a2); return new Response(JSON[_0x18574c(0x185)]({ 'ok': !![], 'status': _0x18574c(0x123) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } else { return new Response(JSON['stringify']({ 'ok': ![], 'status': _0x18574c(0x154) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } break; case await dect(_0x125396[0x8], _0x4647c1): if (_0x387f1c['get']('path')) { var _0x4f318e = ''; var _0x74be8d = _0x18574c(0x18c); try { if (_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))['indexOf']('.') > -0x1) { _0x4f318e = _0x387f1c[_0x18574c(0x148)]('path')['split']('.'); _0x4f318e = _0x4f318e[_0x18574c(0x1a1)]()[0x0]; } } catch (_0x1eaa04) { } if (_0x4f318e == '' || _0x4f318e['length'] > 0x5) { } else { var _0x74be8d = JSON[_0x18574c(0x16a)](await cloudHosting[_0x18574c(0x148)](_0x18574c(0x198), { 'cacheTtl': 0xe10 })); _0x74be8d = _0x74be8d[_0x4f318e]; } var _0xe8f425 = await cloudHosting[_0x18574c(0x1a5)](_0x387f1c[_0x18574c(0x148)]('path')); var _0x4af8a2 = {}; if (_0xe8f425[_0x18574c(0x17c)]) { _0x4af8a2[_0x18574c(0x17c)] = _0xe8f425['metadata']; } else { _0x4af8a2 = { 'metadata': { 'since': Math[_0x18574c(0x163)](new Date()[_0x18574c(0x132)]()), 'extension': _0x4f318e, 'mime': _0x74be8d, 'size': _0x387f1c[_0x18574c(0x148)]('file')[_0x18574c(0x14d)], 'base64': ![], 'type': _0x387f1c[_0x18574c(0x148)](_0x18574c(0x17f)) } }; } try { if (cloud['xs'][_0x18574c(0x166)]('t')) { _0x4af8a2[_0x18574c(0x199)] = cloud[_0x18574c(0x164)]; } } catch (_0x51d51e) { } await cloudHosting[_0x18574c(0x174)](_0x387f1c['get']('path'), await enct(_0x387f1c['get'](_0x18574c(0x179))), _0x4af8a2); return new Response(JSON[_0x18574c(0x185)]({ 'ok': !![], 'status': _0x18574c(0x123) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } else { return new Response(JSON[_0x18574c(0x185)]({ 'ok': ![], 'status': _0x18574c(0x154) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } break; case await dect(_0x125396[0x9], _0x4647c1): if (_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))) { var _0xe8f425 = await cloudHosting[_0x18574c(0x1a5)](_0x387f1c['get'](_0x18574c(0x131))); try { if (!_0xe8f425['metadata']) { _0xe8f425[_0x18574c(0x17c)] = {}; } } catch (_0x187116) { } _0xe8f425[_0x18574c(0x17c)][_0x387f1c[_0x18574c(0x148)]('key')] = _0x387f1c[_0x18574c(0x148)]('value'); var _0x4af8a2 = { 'metadata': _0xe8f425[_0x18574c(0x17c)] }; try { if (cloud['xs'][_0x18574c(0x166)]('t')) { _0x4af8a2[_0x18574c(0x199)] = cloud[_0x18574c(0x164)]; } } catch (_0x598809) { } await cloudHosting[_0x18574c(0x174)](_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131)), _0xe8f425[_0x18574c(0x14b)], _0x4af8a2); return new Response(JSON[_0x18574c(0x185)]({ 'ok': !![], 'status': _0x18574c(0x1ba) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } else { return new Response(JSON['stringify']({ 'ok': ![], 'status': _0x18574c(0x154) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } break; case await dect(_0x125396[0xa], _0x4647c1): if (_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))) { var _0xe8f425 = await cloudHosting[_0x18574c(0x1a5)](_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131))); try { if (!_0xe8f425[_0x18574c(0x17c)]) { _0xe8f425[_0x18574c(0x17c)] = {}; } } catch (_0x11bfaa) { } try { delete _0xe8f425[_0x18574c(0x17c)][_0x387f1c[_0x18574c(0x148)](_0x18574c(0x19c))]; } catch (_0x333041) { return new Response(JSON[_0x18574c(0x185)]({ 'ok': ![], 'status': _0x18574c(0x154) }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } await cloudHosting[_0x18574c(0x174)](_0x387f1c[_0x18574c(0x148)](_0x18574c(0x131)), _0xe8f425[_0x18574c(0x14b)], { 'metadata': _0xe8f425['metadata'] }); return new Response(JSON[_0x18574c(0x185)]({ 'ok': !![], 'status': 'Deleted' }), { 'headers': { 'Content-Type': 'application/json' }, 'status': 0xc8 }); } else { return new Response(JSON['stringify']({ 'ok': ![], 'status': 'Failed' }), { 'headers': { 'Content-Type': _0x18574c(0x133) }, 'status': 0xc8 }); } break; } } else { return await requestDeny(_0x2333ce); } } else { return await banned(_0x2333ce); } } else { return await requestDeny(_0x2333ce); } } else { return await requestDeny(_0x2333ce); } } else if (_0x2333ce == '/admin' || _0x2333ce[_0x18574c(0x172)](_0x18574c(0x19f)) && _0x360f38[_0x18574c(0x148)]('builder')) { if (_0x3eca4a[_0x18574c(0x12e)](_0x18574c(0x17b)) > -0x1) { await scf(_0x1cdaed); try { var _0x5da8ac = await cloudHosting['get'](_0x18574c(0x170), { 'cacheTtl': 0xe10 }); if (!_0x5da8ac) { await cloudHosting[_0x18574c(0x174)]('~cacheMap', await enct(JSON[_0x18574c(0x185)](cachingMap))); } } catch (_0x3b2c50) { console[_0x18574c(0x146)](_0x3b2c50); return new Response(_0x18574c(0x1a2), { 'headers': { 'Content-Type': _0x18574c(0x18c) }, 'status': 0xc8 }); } try { var _0x74be8d = JSON[_0x18574c(0x16a)](await cloudHosting[_0x18574c(0x148)](_0x18574c(0x198), { 'cacheTtl': 0xe10 })); if (!_0x74be8d) { var _0x5d7de0 = await fetch(mimeURL, { 'cf': { 'cacheTtl': 0xe10, 'cacheEverything': !![] } }); _0x5d7de0 = await gatherResponse(_0x5d7de0); await cloudHosting[_0x18574c(0x174)](_0x18574c(0x198), _0x5d7de0); } } catch (_0x1070c3) { console[_0x18574c(0x146)](_0x1070c3); } return new Response(html, { 'headers': { 'Content-Type': 'text/html' }, 'status': 0xc8 }); } else { return await requestDeny(_0x2333ce); } } else if (_0x2333ce[_0x18574c(0x166)]('/') && !_0x2333ce[_0x18574c(0x166)]('/~')) { await scf(_0x1cdaed); if (_0x2333ce == '/') { return await atc(_0x1cdaed, await gf(_0x18574c(0x127), _0x2333ce, _0x3eca4a, _0x1cdaed)); } else { var _0x219f51 = await cloudHosting[_0x18574c(0x148)](decodeURIComponent(_0x2333ce)); if (_0x219f51) { return await gf(decodeURIComponent(_0x2333ce), _0x2333ce, _0x3eca4a, _0x1cdaed); } else { return await requestDeny(_0x2333ce); } } } else { return await requestDeny(_0x2333ce); } } catch (_0xe15aa8) { console[_0x18574c(0x146)](_0xe15aa8); return await requestDeny(_0x2333ce); } } async function requestDeny(_0x2ef2b6) { var _0x4320b7 = _0x1e1102; return new Response('<html><body><div\x20style=\x27width:100%;height:90vh;display:flex;flex-direction:column;justify-content:center;align-items:center\x27><h1\x20style=\x27margin:\x200;\x20color:\x20orangered;\x20\x27>404</h1>\x20<p\x20style=\x27margin:\x200;\x27>\x20File\x20not\x20found.</p></div></body></html>', { 'headers': { 'Content-Type': _0x4320b7(0x18c), 'Cache-Control': _0x4320b7(0x137) }, 'status': 0x194 }); } async function banned(_0x46c488) { var _0x41a727 = _0x1e1102; return new Response(JSON['stringify']({ 'ok': ![], 'result': _0x41a727(0x15c), 'route': _0x46c488 }), { 'headers': { 'Content-Type': _0x41a727(0x133) }, 'status': 0x193 }); } async function gatherResponse(_0x975ea9) { var _0x52b5c4 = _0x1e1102; const { headers: _0x2d9a4e } = _0x975ea9; const _0x52cf5c = _0x2d9a4e[_0x52b5c4(0x148)](_0x52b5c4(0x14a)) || ''; if (_0x52cf5c[_0x52b5c4(0x188)]('application/json')) { return JSON['parse'](JSON[_0x52b5c4(0x185)](await _0x975ea9[_0x52b5c4(0x12c)]())); } return _0x975ea9[_0x52b5c4(0x1a0)](); } async function gf(_0x1cf06d, _0x3166ad, _0x575bda, _0x5a6399) { var _0x5abfdc = _0x1e1102; var _0x76c5c0 = ''; var _0x264337 = _0x5abfdc(0x18c); try { if (_0x1cf06d[_0x5abfdc(0x12e)]('.') > -0x1) { _0x76c5c0 = _0x1cf06d[_0x5abfdc(0x177)]('.'); _0x76c5c0 = _0x76c5c0[_0x5abfdc(0x1a1)]()[0x0]; } } catch (_0x310a28) { } if (_0x76c5c0 == '' || _0x76c5c0['length'] > 0x5) { } else { var _0x264337 = JSON[_0x5abfdc(0x16a)](await cloudHosting[_0x5abfdc(0x148)](_0x5abfdc(0x198), { 'cacheTtl': 0xe10 })); _0x264337 = _0x264337[_0x76c5c0]; } var _0x49c182 = await cc(_0x1cf06d); var _0x14c87b = await cloudHosting['getWithMetadata'](decodeURIComponent(_0x1cf06d)); if (!_0x14c87b[_0x5abfdc(0x14b)] && _0x1cf06d == _0x5abfdc(0x127)) { return new Response(_0x5abfdc(0x1b7) + _0x5abfdc(0x129) + _0x5abfdc(0x1b0), { 'headers': { 'Content-Type': _0x5abfdc(0x18c) }, 'status': 0xc8 }); } var _0x5cde68 = _0x14c87b[_0x5abfdc(0x17c)]; var _0x41d62f = await fwb(_0x5cde68, _0x5a6399); if (_0x41d62f == !![]) { return requestDeny(_0x3166ad); } try { if (_0x41d62f !== ![]) { try { var _0x79bbb7; try { _0x79bbb7 = new URL(_0x41d62f); } catch (_0x31144e) { } if (_0x575bda == _0x79bbb7[_0x5abfdc(0x128)]) { return await gf(_0x79bbb7[_0x5abfdc(0x17d)], _0x79bbb7[_0x5abfdc(0x17d)], _0x575bda, _0x5a6399); } else { return fetch(_0x79bbb7); } } catch (_0x264254) { console[_0x5abfdc(0x146)](_0x264254); return Response[_0x5abfdc(0x184)](_0x545ab9, 0x12d); } } } catch (_0x35285c) { } var _0x14c87b = await dect(_0x14c87b[_0x5abfdc(0x14b)]); try { if (_0x5cde68[_0x5abfdc(0x1b6)] == _0x5abfdc(0x165)) { if (_0x14c87b == _0x5abfdc(0x145)) { var _0x2ec49e = {}; var _0x244a59 = _0x5a6399['cf']; try { Object['keys'](_0x244a59)[_0x5abfdc(0x173)](function (_0x5080c7) { _0x2ec49e[_0x5080c7] = _0x244a59[_0x5080c7]; }); } catch (_0xcd3a48) { } try { delete _0x2ec49e[_0x5abfdc(0x192)]; delete _0x2ec49e[_0x5abfdc(0x181)]; delete _0x2ec49e[_0x5abfdc(0x16b)]; delete _0x2ec49e[_0x5abfdc(0x13d)]; delete _0x2ec49e[_0x5abfdc(0x15d)]; delete _0x2ec49e[_0x5abfdc(0x15f)]; } catch (_0x44e5c4) { } return new Response(JSON[_0x5abfdc(0x185)](_0x2ec49e), { 'headers': { 'Content-Type': _0x5abfdc(0x133) }, 'status': 0xc8 }); } else if (_0x14c87b == _0x5abfdc(0x142)) { return new Response(JSON[_0x5abfdc(0x185)](Object[_0x5abfdc(0x195)](_0x5a6399['headers'])), { 'headers': { 'Content-Type': 'application/json' }, 'status': 0xc8 }); } else if (_0x14c87b[_0x5abfdc(0x12e)](_0x5abfdc(0x122)) > -0x1 && _0x14c87b[_0x5abfdc(0x12e)](_0x5abfdc(0x13f)) > -0x1) { var _0x4d0988 = _0x14c87b[_0x5abfdc(0x177)]('\x0a'); var _0x545ab9 = null; _0x4d0988[_0x5abfdc(0x173)](function (_0x22290d) { var _0x6e4665 = _0x5abfdc; try { if (_0x22290d[_0x6e4665(0x12e)]('=') > -0x1) { words = _0x22290d[_0x6e4665(0x177)]('='); try { if (words[0x0]['trim']()[_0x6e4665(0x18a)]() == _0x5a6399['cf'][_0x6e4665(0x18b)]) { _0x545ab9 = words[0x1]['trim'](); } else if (words[0x0][_0x6e4665(0x13e)]() == '*') { if (_0x545ab9 == null) { _0x545ab9 = words[0x1][_0x6e4665(0x13e)](); } } } catch (_0x4dedb3) { } } } catch (_0x1f40c3) { } }); try { var _0x79bbb7 = new URL(_0x545ab9); if (_0x575bda == _0x79bbb7[_0x5abfdc(0x128)]) { return await gf(_0x79bbb7[_0x5abfdc(0x17d)], _0x79bbb7[_0x5abfdc(0x17d)], _0x575bda, _0x5a6399); } else { return fetch(_0x79bbb7); } } catch (_0x3aaf29) { return Response[_0x5abfdc(0x184)](_0x545ab9, 0x12d); } } else if (_0x14c87b[_0x5abfdc(0x12e)]('<$CSred>') > -0x1 && _0x14c87b[_0x5abfdc(0x12e)](_0x5abfdc(0x12b)) > -0x1) { var _0x4d0988 = _0x14c87b[_0x5abfdc(0x177)]('\x0a'); var _0x545ab9 = null; _0x4d0988[_0x5abfdc(0x173)](function (_0x391c07) { var _0x4958e9 = _0x5abfdc; try { if (_0x391c07[_0x4958e9(0x12e)]('=') > -0x1) { words = _0x391c07[_0x4958e9(0x177)]('='); try { if (words[0x0][_0x4958e9(0x13e)]()['toUpperCase']() == _0x5a6399['cf'][_0x4958e9(0x18b)]) { _0x545ab9 = _0x391c07[_0x4958e9(0x1af)](_0x391c07[_0x4958e9(0x12e)]('=') + 0x1)[_0x4958e9(0x13e)](); } else if (words[0x0][_0x4958e9(0x13e)]() == '*') { if (_0x545ab9 == null) { _0x545ab9 = _0x391c07[_0x4958e9(0x1af)](_0x391c07['indexOf']('=') + 0x1)[_0x4958e9(0x13e)](); } } } catch (_0x502228) { console['log'](_0x502228); } } } catch (_0x6653d0) { } }); return Response[_0x5abfdc(0x184)](decodeURIComponent(_0x545ab9), 0x12d); } } else if (_0x5cde68[_0x5abfdc(0x176)] == !![]) { try { var _0x555096 = new Response(b6d(_0x14c87b['split'](';base64,')[0x1]), { 'headers': { 'Content-Type': _0x264337, 'content-length': _0x14c87b[_0x5abfdc(0x14d)], 'Cache-Control': 'public,\x20max-age=' + _0x49c182 + _0x5abfdc(0x134) + _0x49c182, 'Access-Control-Allow-Origin': _0x575bda } }); if (cacheRequest) { return await atc(_0x5a6399, _0x555096); } else { return _0x555096; } } catch (_0x341c9e) { var _0x555096 = new Response(_0x14c87b, { 'headers': { 'Content-Type': _0x264337, 'content-length': _0x14c87b[_0x5abfdc(0x14d)], 'Cache-Control': 'public,\x20max-age=' + _0x49c182 + _0x5abfdc(0x134) + _0x49c182, 'Access-Control-Allow-Origin': _0x575bda } }); if (cacheRequest) { return await atc(_0x5a6399, _0x555096); } else { return _0x555096; } } } else { var _0x555096 = new Response(_0x14c87b, { 'headers': { 'Content-Type': _0x264337, 'content-length': _0x14c87b[_0x5abfdc(0x14d)], 'Cache-Control': _0x5abfdc(0x18d) + _0x49c182 + _0x5abfdc(0x134) + _0x49c182, 'Access-Control-Allow-Origin': _0x575bda } }); if (cacheRequest) { return await atc(_0x5a6399, _0x555096); } else { return _0x555096; } } } catch (_0x543ef8) { var _0x555096 = new Response(_0x14c87b, { 'headers': { 'Content-Type': _0x264337, 'content-length': _0x14c87b[_0x5abfdc(0x14d)], 'Cache-Control': _0x5abfdc(0x18d) + _0x49c182 + _0x5abfdc(0x134) + _0x49c182, 'Access-Control-Allow-Origin': _0x575bda } }); if (cacheRequest) { return await atc(_0x5a6399, _0x555096); } else { return _0x555096; } } } async function cc(_0x47ebd6) { var _0x213312 = _0x1e1102; var _0x155161 = 0xe10; try { cachingMap = JSON[_0x213312(0x16a)](await dect(await cloudHosting[_0x213312(0x148)](_0x213312(0x170), { 'cacheTtl': 0xe10 }))); } catch (_0x3e93bb) { console[_0x213312(0x146)](_0x3e93bb); } try { var _0x42e2a9 = _0x47ebd6[_0x213312(0x177)]('.'); _0x42e2a9 = _0x42e2a9[_0x213312(0x1a1)]()[0x0]; var _0x11d079 = cachingMap[_0x213312(0x1b4)][_0x42e2a9]; if (_0x11d079) { return _0x11d079; } } catch (_0x3740fd) { } try { if (cachingMap[_0x213312(0x135)][_0x213312(0x14d)] > 0x0) { cachingMap[_0x213312(0x135)]['forEach'](_0x18cdea => { var _0x2ab31d = _0x213312; if (_0x18cdea[_0x2ab31d(0x159)][_0x2ab31d(0x12e)]('*') > -0x1) { _0x18cdea[_0x2ab31d(0x159)] = _0x18cdea[_0x2ab31d(0x159)][_0x2ab31d(0x177)]('*')[0x0]; if (_0x47ebd6[_0x2ab31d(0x166)](_0x18cdea[_0x2ab31d(0x159)])) { _0x155161 = _0x18cdea[_0x2ab31d(0x13c)]; } } else { if (_0x47ebd6 == _0x18cdea['route']) { _0x155161 = _0x18cdea[_0x2ab31d(0x13c)]; } } }); } } catch (_0x1b6d5e) { } return _0x155161; } async function fwb(_0x2940e6, _0x1ca9c0) { var _0x17e502 = _0x1e1102; try { var _0x34b91d; if (_0x2940e6['firewall']) { cacheRequest = ![]; _0x34b91d = _0x2940e6[_0x17e502(0x1b8)]; } else { return ![]; } var _0x27272f = Object[_0x17e502(0x195)](_0x1ca9c0[_0x17e502(0x125)]); var _0x2b9e6a = _0x1ca9c0['cf']; _0x27272f[_0x17e502(0x17a)] = _0x1ca9c0[_0x17e502(0x17a)]; try { Object[_0x17e502(0x161)](_0x2b9e6a)['forEach'](function (_0x4b258e) { _0x27272f[_0x4b258e] = _0x2b9e6a[_0x4b258e]; }); } catch (_0x137f54) { } if (_0x34b91d && _0x34b91d[_0x17e502(0x12e)]('|') > -0x1) { var _0x29cb4f = !![]; var _0x88d504 = ![]; var _0x26192d = null; var _0x39b257 = null; var _0x3ee02e = null; var _0x5519e3 = ![]; var _0x4c2255 = ''; var _0x34b91d = _0x34b91d['split']('|'); var _0x318c00 = ''; try { var _0x5282ed = fwwR; _0x34b91d[_0x17e502(0x173)](function (_0x4f297c, _0x4fa91b) { var _0x2e8967 = _0x17e502; console[_0x2e8967(0x146)](_0x4f297c); if (_0x4fa91b == 0x0) { if (_0x4f297c[_0x2e8967(0x12e)](_0x2e8967(0x1b9)) > -0x1) { _0x5519e3 = !![]; _0x88d504 = !![]; _0x4c2255 = _0x4f297c['split'](_0x2e8967(0x1b9))[0x1]; _0x318c00 += _0x2e8967(0x157) + _0x5519e3 + '|'; } if (_0x4f297c == _0x5282ed[0x0]) { _0x88d504 = !![]; _0x318c00 += _0x2e8967(0x162) + _0x88d504 + '|'; } else if (_0x4f297c[_0x2e8967(0x12e)](_0x5282ed[0xc]) > -0x1) { _0x5519e3 = !![]; _0x88d504 = !![]; _0x4c2255 = _0x4f297c[_0x2e8967(0x177)](_0x2e8967(0x1b9))[0x1]; _0x318c00 += 'respond:' + _0x5519e3 + '|'; } else { _0x318c00 += _0x2e8967(0x162) + !_0x88d504 + '|'; } } else { if (_0x4f297c[_0x2e8967(0x12e)](_0x5282ed[0x3]) > -0x1) { var _0x11ed3f = _0x4f297c[_0x2e8967(0x177)](_0x5282ed[0x3]); if (_0x11ed3f[0x1] == _0x5282ed[0x4]) { try { if (_0x27272f[_0x11ed3f[0x0]] == _0x11ed3f[0x2]) { _0x39b257 = !![]; } else { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } } } catch (_0x1f0fc2) { _0x39b257 = ![]; } _0x318c00 += _0x4f297c + ':' + _0x39b257 + '|'; } else if (_0x11ed3f[0x1] == _0x5282ed[0x5]) { try { if (_0x27272f[_0x11ed3f[0x0]] != _0x11ed3f[0x2]) { _0x39b257 = !![]; } else { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } } } catch (_0x4d6c30) { _0x39b257 = ![]; } _0x318c00 += _0x4f297c + ':' + _0x39b257 + '|'; } else if (_0x11ed3f[0x1] == _0x5282ed[0x6]) { try { if (_0x27272f[_0x11ed3f[0x0]][_0x2e8967(0x12e)](_0x11ed3f[0x2]) > -0x1) { _0x39b257 = !![]; } else { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } } } catch (_0x30f1e7) { _0x39b257 = ![]; } _0x318c00 += _0x4f297c + ':' + _0x39b257 + '|'; } else if (_0x11ed3f[0x1] == _0x5282ed[0xb]) { try { if (_0x27272f[_0x11ed3f[0x0]]['indexOf'](_0x11ed3f[0x2]) == -0x1) { _0x39b257 = !![]; } else { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } } } catch (_0x5bc99d) { _0x39b257 = !![]; } _0x318c00 += _0x4f297c + ':' + _0x39b257 + '|'; } else if (_0x11ed3f[0x1] == _0x5282ed[0x7]) { try { if (_0x27272f[_0x11ed3f[0x0]]['startsWith'](_0x11ed3f[0x2])) { _0x39b257 = !![]; } else { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } } } catch (_0x4f2885) { _0x39b257 = ![]; } _0x318c00 += _0x4f297c + ':' + _0x39b257 + '|'; } else if (_0x11ed3f[0x1] == _0x5282ed[0x8]) { try { if (_0x27272f[_0x11ed3f[0x0]][_0x2e8967(0x172)](_0x11ed3f[0x2])) { _0x39b257 = !![]; } else { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } } } catch (_0x394b11) { _0x39b257 = ![]; } _0x318c00 += _0x4f297c + ':' + _0x39b257 + '|'; } else if (_0x11ed3f[0x1] == _0x5282ed[0x9]) { try { if (_0x11ed3f[0x2]['indexOf'](',') > -0x1) { _0x11ed3f[0x2] = _0x11ed3f[0x2]['split'](','); } else { _0x11ed3f[0x2] = [_0x11ed3f[0x2]]; } try { if (_0x11ed3f[0x2][_0x2e8967(0x188)](_0x27272f[_0x11ed3f[0x0]])) { _0x39b257 = !![]; } else { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } } } catch (_0x422426) { _0x39b257 = ![]; } _0x318c00 += _0x4f297c + ':' + _0x39b257 + '|'; } catch (_0x1f744b) { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } _0x318c00 += _0x1f744b['toString'](); } } else if (_0x11ed3f[0x1] == _0x5282ed[0xa]) { try { if (_0x11ed3f[0x2][_0x2e8967(0x12e)](',') > -0x1) { _0x11ed3f[0x2] = _0x11ed3f[0x2]['split'](','); } else { _0x11ed3f[0x2] = [_0x11ed3f[0x2]]; } try { if (!_0x11ed3f[0x2]['includes'](_0x27272f[_0x11ed3f[0x0]])) { _0x39b257 = !![]; } else { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } } } catch (_0x476f28) { _0x39b257 = !![]; } _0x318c00 += _0x4f297c + ':' + _0x39b257 + '|'; } catch (_0x170c3b) { if (_0x26192d === !![]) { } else { _0x39b257 = ![]; } } } } else { if (_0x4f297c == _0x5282ed[0x1]) { _0x26192d = !![]; _0x3ee02e = ![]; _0x318c00 += '|or|'; } else if (_0x4f297c == _0x5282ed[0x2]) { _0x3ee02e = !![]; _0x26192d = ![]; if (_0x88d504 == !![]) { _0x29cb4f = _0x39b257 == !![] ? ![] : !![]; } else { _0x29cb4f = _0x39b257 == !![] ? !![] : ![]; } _0x318c00 += _0x2e8967(0x1a6) + _0x29cb4f + '|'; } else if (_0x4f297c == _0x5282ed[0xc]) { if (_0x88d504 == !![]) { _0x29cb4f = _0x39b257 == !![] ? ![] : !![]; } else { _0x29cb4f = _0x39b257 == !![] ? !![] : ![]; } _0x318c00 += _0x2e8967(0x1a6) + _0x29cb4f + '|'; } else { if (_0x34b91d['length'] == _0x4fa91b + 0x1) { if (_0x88d504 == !![]) { _0x29cb4f = _0x39b257 == !![] ? ![] : !![]; } else { _0x29cb4f = _0x39b257 == !![] ? !![] : ![]; } _0x318c00 += _0x2e8967(0x17e) + _0x29cb4f; } } } } }); } catch (_0x2a37a3) { console[_0x17e502(0x146)](_0x2a37a3); } if (_0x5519e3 == !![] && _0x29cb4f == ![]) { return _0x4c2255; } else { return _0x29cb4f; } } else { return ![]; } } catch (_0x318df3) { return ![]; } } async function atc(_0x3369ca, _0xfec35d) { var _0x219990 = _0x1e1102; let _0x5c0249 = await cache[_0x219990(0x183)](_0x3369ca); if (!_0x5c0249) { await cache[_0x219990(0x174)](_0x3369ca, _0xfec35d['clone']()); return _0xfec35d; } else { return _0x5c0249; } } function _0x660c(_0x5a720d, _0x1316a0) { var _0x104085 = _0x1040(); _0x660c = function (_0x660ca7, _0x38c7c8) { _0x660ca7 = _0x660ca7 - 0x122; var _0x143d9c = _0x104085[_0x660ca7]; return _0x143d9c; }; return _0x660c(_0x5a720d, _0x1316a0); } async function scf(_0x1c77bb) { var _0x3176a9 = _0x1e1102; let _0x30cb42 = await cache[_0x3176a9(0x183)](_0x1c77bb); if (_0x30cb42) { return _0x30cb42; } } function b6d(_0x2d1638) { var _0x5732e1 = _0x1e1102; _0x2d1638 = atob(_0x2d1638); const _0x12ecf4 = _0x2d1638[_0x5732e1(0x14d)], _0x2058c5 = new ArrayBuffer(_0x12ecf4), _0x5e1a16 = new Uint8Array(_0x2058c5); for (var _0x2cba36 = 0x0; _0x2cba36 < _0x12ecf4; _0x2cba36++) { _0x5e1a16[_0x2cba36] = _0x2d1638[_0x5732e1(0x155)](_0x2cba36); } return _0x2058c5; } async function zos(_0x47eec6, _0x4ea33) { var _0x310d77 = _0x1e1102; try { var _0x2c1364 = JSON[_0x310d77(0x16a)](await dect(await cloudHosting[_0x310d77(0x148)]('~' + eec('config')))); if (_0x2c1364['ok'] == !![]) { return !![]; } } catch (_0x2dda8f) { } var _0x1b3b0c = randomID(0x64) + '-' + new Date()[_0x310d77(0x132)]() + '-' + randomID(0x64); var _0x427852 = Math[_0x310d77(0x19b)](Math[_0x310d77(0x15a)]() * 0x9 + 0x1); var _0x42e683 = [['Z', 'A', 'W', 'l', 'p'], ['X', 'S', 'E', 'z', 'a'], ['C', 'D', 'R', 'x', 's'], ['V', 'F', 'T', 'c', 'd'], ['B', 'G', 'Y', 'v', 'f'], ['N', 'H', 'U', 'b', 'g', 'y'], ['M', 'J', 'I', 'n', 'h', 'u'], ['K', 'O', 'm', 'j', 'i'], ['L', 'P', 'Q', 'k', 'o'], ['q', 'w', 'e', 'r', 't']]; var _0x2437fb = ''; var _0x4ddccd = parseInt(_0x1b3b0c[_0x310d77(0x177)]('-')[0x1]) + parseInt(0x39a41ba3) + ''; for (var _0x2ef415 = 0x0; _0x2ef415 < _0x4ddccd[_0x310d77(0x14d)]; _0x2ef415++) { _0x2437fb += _0x42e683[_0x4ddccd[_0x310d77(0x141)](_0x2ef415)][Math[_0x310d77(0x19b)](Math[_0x310d77(0x15a)]() * _0x42e683[_0x4ddccd[_0x310d77(0x141)](_0x2ef415)]['length'])]; } var _0x2437fb = _0x42e683[_0x427852][Math[_0x310d77(0x19b)](Math[_0x310d77(0x15a)]() * _0x42e683[_0x427852][_0x310d77(0x14d)])] + _0x2437fb + randomID(_0x427852); var _0x2276ff = await fetch(flid, { 'method': _0x310d77(0x186), 'cf': { 'cacheTtl': 0xe10 }, 'headers': { 'cfp': _0x4ea33[_0x310d77(0x125)]['get'](_0x310d77(0x175)), 'content-type': _0x310d77(0x133), 'uikit': 'lwi3u96fxsEMaEhxfBczTwkdgXiTrg4Vzo1hqyTqvG12cv9MH5llGRHOpwO3Fik8C8ILqSdgHUBEwrxHLvUs2cL1F4qGpGwN0KkSKrjGDugyzTJ85tDiOzh2HLKEaRfmYItwGmw2g17FgodOag6IEJ0nq9ZVsV2TBjOs3ioYcCLoGIg9WmNBa4aNE1vdmdNIrRYva0XsLA2DTrgyGVuC4CNHdpSyxTfaOikk8jzyd0ouDz34hXHXfsVYbCSIPPolC2F3imiRG48AjQB2tbVUNBYWgXBxzgpdArTyAgUZEJZFKBL1rCBmEtCOFHLlQ6QmYPQX1Uv8y5nRjj6OGWoTNc6ftPvJWs8OowViWAnqiGKaeOBCFb8HiKPMWA2oCflqWehduG0hpkM7CpZep2PIxrIH6PnZbnUuh9eGDv7zBGxZOasQ9J7vtVKJExGV9vy2vdameDJOW4RpVbleiYTZGUFqjVa4TfBj9xHdEWtifiB64G5ECZqh4K3BQ06DUQDoeh1lI9j2fYIFe6XNyv7GzAoBBVlfKrthyDCRA17O4KBPoEopcqM4xYomfpP8RswIrAbYIB5tAyOpwrqAvTfxzWn6z6ABoGp9JDZdtpgnlo4xglev48V6qtekHdAgW1Za1ipCZh0suc1gfMysgk9Rc7aZDBhpoAkbotciDteF5V8dz2jtG3BTc6ZHPerFC92Hn5cNsAfN29H6A3DxeOu4fRQ1Iqa2k10wgEBi4l0NTwCRUT75iZHiV5TMi8BtFioJLfzrs3aF98b4vD4tkg52ZcdPRpXR8W8Qp0xtarVBHfe6wUCGnlhY8KjpAlaVObj9Jp0ihNV4tanzvfJ65RwrGpbi4HhvVYFZuZWSLQtYIueDXJwvcIYJr7JxZf0a0vV24FcDq2MUS5fVrlavh9nRaHwQxUSOZWOKk8uPkGpoBkrcYXRw4WhlO8yqseiFlJwzfmkaEBHBDyy0SWfbmrhydRQTijFQqGxDkYzrnLbr7uBRufY4w9yo2P6dgGhVyl1P', 'req': _0x47eec6, 'cacheClear': _0x2437fb } }); _0x2276ff = await gatherResponse(_0x2276ff); try { if (_0x2276ff['ok'] === !![]) { await cloudHosting[_0x310d77(0x174)]('~' + eec('config'), await enct(JSON[_0x310d77(0x185)](_0x2276ff)), { 'expirationTtl': 0x15180 }); return !![]; } else { await cloudHosting[_0x310d77(0x174)]('~' + eec(_0x310d77(0x143)), await enct(JSON['stringify'](_0x2276ff)), { 'expirationTtl': 0xe10 }); return ![]; } } catch (_0x3161a3) { await cloudHosting[_0x310d77(0x174)]('~' + eec(_0x310d77(0x143)), await enct(JSON[_0x310d77(0x185)](_0x2276ff)), { 'expirationTtl': 0xe10 }); return ![]; } } async function uiUx(_0x2e6950, _0x5a578e, _0x47ef52) { var _0x2cd145 = _0x1e1102; _0x2e6950 = _0x2e6950[_0x2cd145(0x197)](/\s+/g, ''); var _0x11a928 = randomID(0x64) + '-' + new Date()['getTime']() + '-' + randomID(0x64); var _0x313d80 = Math[_0x2cd145(0x19b)](Math[_0x2cd145(0x15a)]() * 0x9 + 0x1); var _0x926657 = [['Z', 'A', 'W', 'l', 'p'], ['X', 'S', 'E', 'z', 'a'], ['C', 'D', 'R', 'x', 's'], ['V', 'F', 'T', 'c', 'd'], ['B', 'G', 'Y', 'v', 'f'], ['N', 'H', 'U', 'b', 'g', 'y'], ['M', 'J', 'I', 'n', 'h', 'u'], ['K', 'O', 'm', 'j', 'i'], ['L', 'P', 'Q', 'k', 'o'], ['q', 'w', 'e', 'r', 't']]; var _0x25e3bf = ''; var _0x2c9bb0 = parseInt(_0x11a928[_0x2cd145(0x177)]('-')[0x1]) + parseInt(0x39a41ba3) + ''; for (var _0x42db4b = 0x0; _0x42db4b < _0x2c9bb0['length']; _0x42db4b++) { _0x25e3bf += _0x926657[_0x2c9bb0[_0x2cd145(0x141)](_0x42db4b)][Math[_0x2cd145(0x19b)](Math[_0x2cd145(0x15a)]() * _0x926657[_0x2c9bb0['charAt'](_0x42db4b)][_0x2cd145(0x14d)])]; } var _0x25e3bf = _0x926657[_0x313d80][Math['floor'](Math[_0x2cd145(0x15a)]() * _0x926657[_0x313d80]['length'])] + _0x25e3bf + randomID(_0x313d80); var _0x5eed54 = await fetch(_0x2cd145(0x13b), { 'method': _0x2cd145(0x186), 'cf': { 'cacheTtl': 0xe10 }, 'headers': { 'cfp': _0x47ef52[_0x2cd145(0x125)][_0x2cd145(0x148)]('cf-connecting-ip'), 'content-type': 'application/json', 'uikit': _0x2cd145(0x171), 'token': _0x2e6950, 'req': _0x5a578e, 'cacheClear': _0x25e3bf } }); _0x5eed54 = await gatherResponse(_0x5eed54); var _0x278589 = _0x5a578e + '*' + _0x5a578e['split']('.')[_0x2cd145(0x16e)](0x1)[_0x2cd145(0x14e)]('.') + '*' + _0x47ef52[_0x2cd145(0x125)][_0x2cd145(0x148)]('cf-connecting-ip') + '*' + _0x47ef52['headers'][_0x2cd145(0x148)](_0x2cd145(0x16d)); try { _0x5eed54['info'] = JSON[_0x2cd145(0x16a)](await dect(_0x5eed54['info'], _0x278589)); } catch (_0x181dd6) { } try { css = _0x5eed54[_0x2cd145(0x150)]['domain']; cloud[_0x2cd145(0x164)] = _0x5eed54['info']['ttl']; cloud['xs'] = _0x5eed54[_0x2cd145(0x150)]['subscription']; cloud['by'] = 'expirationTtl'; const _0x6fd06b = await dect(_0x5eed54['s'], _0x278589); await cloudHosting[_0x2cd145(0x174)](_0x2cd145(0x19d) + _0x47ef52[_0x2cd145(0x125)]['get'](_0x2cd145(0x175)), await enct(JSON[_0x2cd145(0x185)]({ 'code': _0x5eed54, 'headers': Object['fromEntries'](_0x47ef52[_0x2cd145(0x125)]), 'cf': _0x47ef52['cf'] }), _0x6fd06b), { 'expirationTtl': 0x278d00 }); } catch (_0x28a681) { await cloudHosting[_0x2cd145(0x174)]('~login-failed|' + _0x47ef52[_0x2cd145(0x125)][_0x2cd145(0x148)](_0x2cd145(0x175)), JSON[_0x2cd145(0x185)]({ 'code': _0x5eed54, 'headers': Object[_0x2cd145(0x195)](_0x47ef52[_0x2cd145(0x125)]), 'cf': _0x47ef52['cf'] }), { 'expirationTtl': 0x278d00 }); return ![]; } if (_0x5eed54['ok'] === !![]) { return _0x5eed54; } else { return ![]; } } async function ik(_0x579022, _0x497708, _0x20080d) { var _0x12c53c = _0x1e1102; _0x20080d = _0x20080d ? _0x20080d : []; let _0x37426d = {}; _0x37426d[_0x12c53c(0x193)] = _0x579022 ? _0x579022 : ''; _0x37426d['cursor'] = _0x497708 ? _0x497708 : ''; let _0x35e9c2 = await cloudHosting[_0x12c53c(0x1b1)](_0x37426d); _0x20080d['push'](..._0x35e9c2[_0x12c53c(0x161)]); if (_0x35e9c2[_0x12c53c(0x196)] == ![]) { ik(_0x579022, _0x497708, _0x20080d); } else { return _0x20080d; } } async function readRequestBody(_0x5992cd) { var _0x3a6f76 = _0x1e1102; const { headers: _0x14505b } = _0x5992cd; const _0x3a9b99 = _0x14505b[_0x3a6f76(0x148)](_0x3a6f76(0x14a)) || ''; if (_0x3a9b99[_0x3a6f76(0x188)]('application/json')) { return JSON[_0x3a6f76(0x185)](await _0x5992cd['json']()); } else if (_0x3a9b99[_0x3a6f76(0x188)]('application/text')) { return _0x5992cd['text'](); } else if (_0x3a9b99[_0x3a6f76(0x188)](_0x3a6f76(0x18c))) { return _0x5992cd[_0x3a6f76(0x1a0)](); } else if (_0x3a9b99[_0x3a6f76(0x188)](_0x3a6f76(0x139))) { const _0x511eca = await _0x5992cd[_0x3a6f76(0x12f)](); const _0x84b1fa = {}; for (const _0x43fdb5 of _0x511eca[_0x3a6f76(0x168)]()) { _0x84b1fa[_0x43fdb5[0x0]] = _0x43fdb5[0x1]; } return JSON[_0x3a6f76(0x185)](_0x84b1fa); } else { return _0x3a6f76(0x12d); } } async function gb(_0xd6f935) { var _0x53b245 = _0x1e1102; var _0x4bd508 = await dect(await cloudHosting[_0x53b245(0x148)](_0x53b245(0x187) + _0xd6f935['headers'][_0x53b245(0x148)]('cf-connecting-ip'))); if (_0x4bd508) { return !![]; } else { return ![]; } } function randomID(_0x2db4da, _0x4be64d = null) { var _0x5aecf3 = _0x1e1102; var _0x2a73b6 = []; var _0x1b4957 = _0x4be64d == _0x5aecf3(0x158) ? _0x5aecf3(0x18e) : _0x4be64d == _0x5aecf3(0x16f) ? 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; var _0x18c484 = _0x1b4957[_0x5aecf3(0x14d)]; for (var _0x5c8a7f = 0x0; _0x5c8a7f < _0x2db4da; _0x5c8a7f++) { _0x2a73b6[_0x5aecf3(0x1ae)](_0x1b4957[_0x5aecf3(0x141)](Math['floor'](Math[_0x5aecf3(0x15a)]() * _0x18c484))); } return _0x2a73b6['join'](''); } var html = '<!DOCTYPE\x20html>\x0a<html>\x0a<head>\x0a\x20\x20\x20\x20<title>Serverless\x20Connect</title>\x0a\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1\x22>\x0a\x20\x20\x20\x20<link\x20rel=\x22icon\x22\x20type=\x22image/x-icon\x22\x20href=\x22https://production.serverlessconnect.com/v1.2/img/logo-64.png\x22>\x0a\x20\x20\x20\x20<link\x20rel=\x22preconnect\x22\x20href=\x22https://fonts.googleapis.com\x22>\x0a\x20\x20\x20\x20<link\x20rel=\x22preconnect\x22\x20href=\x22https://fonts.gstatic.com\x22\x20crossorigin>\x0a\x20\x20\x20\x20<link\x20href=\x22https://fonts.googleapis.com/css2?family=Bakbak+One&display=swap\x22\x20rel=\x22stylesheet\x22>\x20\x20\x20\x20\x0a\x20\x20\x20\x20<link\x20rel=\x22stylesheet\x22\x20href=\x22https://production.serverlessconnect.com/v1.2/css/uikit.min.css\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22\x20/>\x0a\x20\x20\x20\x20<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/jquery.min.js\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22></script>\x0a\x20\x20\x20\x20<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/uikit.min.js\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22></script>\x0a\x20\x20\x20\x20<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/uikit-icons.min.js\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22></script>\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/crypto.min.js\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22></script>\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20<link\x20href=\x27https://production.serverlessconnect.com/v1.2/css/codemirror.css\x27\x20rel=\x27stylesheet\x27>\x0a\x20\x20\x20\x20<script\x20src=\x27https://production.serverlessconnect.com/v1.2/js/codemirror.js\x27></script>\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20<link\x20href=\x22https://production.serverlessconnect.com/v1.2/css/admin.css\x22\x20rel=\x22stylesheet\x22>\x0a</head>\x0a<body\x20class=\x22theme\x22></body>\x0a<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/connect-admin.js\x22></script>\x0a</html>'; async function enct(_0x10b9d2, _0x1caebe) { var _0x124356 = _0x1e1102; const _0x61d6ea = new TextEncoder()[_0x124356(0x19e)](_0x1caebe); const _0x93086f = await crypto[_0x124356(0x147)][_0x124356(0x1a3)](_0x124356(0x1b2), _0x61d6ea); const _0x33efab = crypto[_0x124356(0x136)](new Uint8Array(0xc)); const _0x59266b = Array['from'](_0x33efab)[_0x124356(0x12a)](_0x5e8972 => String[_0x124356(0x15e)](_0x5e8972))['join'](''); const _0x5401b5 = { 'name': _0x124356(0x182), 'iv': _0x33efab }; const _0x2fcb81 = await crypto['subtle'][_0x124356(0x1a4)](_0x124356(0x153), _0x93086f, _0x5401b5, ![], [_0x124356(0x16c)]); const _0x1d77ca = new TextEncoder()[_0x124356(0x19e)](_0x10b9d2); const _0xe624aa = await crypto[_0x124356(0x147)][_0x124356(0x16c)](_0x5401b5, _0x2fcb81, _0x1d77ca); const _0x350446 = Array[_0x124356(0x13a)](new Uint8Array(_0xe624aa)); const _0x312cc7 = _0x350446[_0x124356(0x12a)](_0x4c2e14 => String['fromCharCode'](_0x4c2e14))['join'](''); return btoa(_0x59266b + _0x312cc7); } async function dect(_0x332e85, _0x162bbd) { var _0x4eb86a = _0x1e1102; try { const _0x2a2864 = new TextEncoder()[_0x4eb86a(0x19e)](_0x162bbd); const _0x373890 = await crypto[_0x4eb86a(0x147)][_0x4eb86a(0x1a3)](_0x4eb86a(0x1b2), _0x2a2864); const _0x4b7524 = atob(_0x332e85)[_0x4eb86a(0x16e)](0x0, 0xc); const _0x22a428 = new Uint8Array(Array[_0x4eb86a(0x13a)](_0x4b7524)['map'](_0x5a6472 => _0x5a6472['charCodeAt'](0x0))); const _0x2a469d = { 'name': _0x4eb86a(0x182), 'iv': _0x22a428 }; const _0x325623 = await crypto[_0x4eb86a(0x147)][_0x4eb86a(0x1a4)](_0x4eb86a(0x153), _0x373890, _0x2a469d, ![], [_0x4eb86a(0x152)]); const _0x111094 = atob(_0x332e85)[_0x4eb86a(0x16e)](0xc); const _0x226cd9 = new Uint8Array(Array['from'](_0x111094)[_0x4eb86a(0x12a)](_0x4c3a67 => _0x4c3a67['charCodeAt'](0x0))); try { const _0x3dfcf6 = await crypto[_0x4eb86a(0x147)]['decrypt'](_0x2a469d, _0x325623, _0x226cd9); const _0x215192 = new TextDecoder()['decode'](_0x3dfcf6); return _0x215192; } catch (_0x423063) { return ''; } } catch (_0x129c2a) { return ''; } } const eec = _0x4cd89f => { var _0x5e075c = _0x1e1102; const _0x3b4cd4 = _0x5a3302 => _0x5a3302[_0x5e075c(0x177)]('')[_0x5e075c(0x12a)](_0x4a1462 => _0x4a1462[_0x5e075c(0x155)](0x0)); const _0x15544c = _0x157373 => ('0' + Number(_0x157373)['toString'](0x10))[_0x5e075c(0x18f)](-0x2); const _0x18eecb = _0x370b10 => _0x3b4cd4('ajsuy65sartfysghuys65as45rtyafajgshGFGDSA127vasb')['reduce']((_0x5cc7a3, _0x45d36d) => _0x5cc7a3 ^ _0x45d36d, _0x370b10); return _0x4cd89f[_0x5e075c(0x177)]('')[_0x5e075c(0x12a)](_0x3b4cd4)['map'](_0x18eecb)[_0x5e075c(0x12a)](_0x15544c)[_0x5e075c(0x14e)](''); };

/* Do not allow to modify or edit for security reason  */
