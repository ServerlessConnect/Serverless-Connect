/* 
Copyright 2023, Serverless Connect
All applicable matarial structure are Intellectual property of Serverless Connect.
https://www.serverlessconnect.com/
Updated - 29/Jun/2023  
Latest Version - 1.23.6
*/

var _0x550a47 = _0x3063; function _0x1601() { var _0x4453f0 = ['/admin/', '51139UgDPPM', 'map', '<meta\x20charset=\x27UTF-8\x27>\x20<meta\x20name=\x27viewport\x27\x20content=\x27width=device-width,\x20initial-scale=1\x27><div\x20style=\x27display:flex;height:90vh;align-items:center;justify-content:center;flex-direction:column\x27><h3\x20style=\x27color:orangered;margin:0\x27>\x20KV\x20Connection\x20Failed\x20!\x20E-001\x20</h3><p\x20style=\x27margin:0;text-align:\x20center;\x20color:\x20silver;\x27>Create\x20a\x20KV\x20and\x20bind\x20to\x20worker\x20by\x20the\x20name\x20\x27cloudHosting\x27\x20.</p></div>', 'fetch', 'extension', '~system-mime-types', '~system/banned/', 'text/html', '<$CSapi>', 'trim', 'file', '<!DOCTYPE\x20html>\x0a<html>\x0a<head>\x0a\x20\x20\x20\x20<title>Serverless\x20Connect</title>\x0a\x20\x20\x20\x20<meta\x20charset=\x22UTF-8\x22>\x0a\x20\x20\x20\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1\x22>\x0a\x20\x20\x20\x20<link\x20rel=\x22icon\x22\x20type=\x22image/x-icon\x22\x20href=\x22https://production.serverlessconnect.com/v1.2/img/logo-64.png\x22>\x0a\x20\x20\x20\x20<link\x20rel=\x22preconnect\x22\x20href=\x22https://fonts.googleapis.com\x22>\x0a\x20\x20\x20\x20<link\x20rel=\x22preconnect\x22\x20href=\x22https://fonts.gstatic.com\x22\x20crossorigin>\x0a\x20\x20\x20\x20<link\x20href=\x22https://fonts.googleapis.com/css2?family=Bakbak+One&display=swap\x22\x20rel=\x22stylesheet\x22>\x20\x20\x20\x20\x0a\x20\x20\x20\x20<link\x20rel=\x22stylesheet\x22\x20href=\x22https://production.serverlessconnect.com/v1.2/css/uikit.min.css\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22\x20/>\x0a\x20\x20\x20\x20<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/jquery.min.js\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22></script>\x0a\x20\x20\x20\x20<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/uikit.min.js\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22></script>\x0a\x20\x20\x20\x20<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/uikit-icons.min.js\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22></script>\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/crypto.min.js\x22\x20crossorigin=\x22anonymous\x22\x20referrerpolicy=\x22no-referrer\x22></script>\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20<link\x20href=\x27https://production.serverlessconnect.com/v1.2/css/codemirror.css\x27\x20rel=\x27stylesheet\x27>\x0a\x20\x20\x20\x20<script\x20src=\x27https://production.serverlessconnect.com/v1.2/js/codemirror.js\x27></script>\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20<link\x20href=\x22https://production.serverlessconnect.com/v1.2/css/admin.css\x22\x20rel=\x22stylesheet\x22>\x0a</head>\x0a<body\x20class=\x22theme\x22></body>\x0a<script\x20src=\x22https://production.serverlessconnect.com/v1.2/js/connect-admin.js\x22></script>\x0a</html>', 'raw', 'headers', 'jpg', 'meta', '<$>request\x20headers\x20api</$>', '<title>Serverless\x20Connect</title>\x20<meta\x20charset=\x22UTF-8\x22>\x20<meta\x20name=\x22viewport\x22\x20content=\x22width=device-width,\x20initial-scale=1\x22>\x20<link\x20rel=\x22icon\x22\x20type=\x22image/x-icon\x22\x20href=\x22https://production.serverlessconnect.com/v1.2/img/logo-64.png\x22>', 'catch', 'endsWith', '~login-success|', 'config', 'Listed', 'txt', 'form', 'entries', '77582508cEyIFk', 'fromCharCode', 'redirect', 'charAt', '/nocache/*', 'text', 'decrypt', '</$CSred>', 'function', '/index.html', 'cf-ipcountry', 'put', 'clone', '205603UQiMtG', 'editable', 'type', 'stringify', 'a\x20file', 'getTime', 'encrypt', 'reverse', 'round', 'number', 'api/authenticate', 'encode', 'prefix', 'tlsCipher', '<html<head>', 'Failed', '/admin', 'default', 'key', 'application/javascript', 'respond:', 'public,\x20max-age=0,\x20s-maxage=0', 'subtle', 'log', 'join', 'split', 'url', 'respondWith', 'other', '(!)', 'content-type', '14CDIPXy', 'request', '4419000QplrNy', '|and\x20-\x20blocked:', 'char', 'Uploaded', 'getWithMetadata', 'indexOf', 'allow:', 'value', 'token', '~cacheMap', ',\x20s-maxage=', 'length', 'match', 'expirationTtl', 'info', 'toUpperCase', 'substr', '18yUnJEr', 'importKey', 'https://production.serverlessconnect.com/', '<html><body><div\x20style=\x27width:100%;height:90vh;display:flex;flex-direction:column;justify-content:center;align-items:center\x27><h1\x20style=\x27margin:\x200;\x20color:\x20orangered;\x20\x27>404</h1>\x20<p\x20style=\x27margin:\x200;\x27>\x20File\x20not\x20found.</p></div></body></html>', 'list_complete', 'json', '|or|', 'Fetched', 'https://production.serverlessconnect.com/api/check/domain', 'parse', 'path', '<$CSred>', 'country', 'lwi3u96fxsEMaEhxfBczTwkdgXiTrg4Vzo1hqyTqvG12cv9MH5llGRHOpwO3Fik8C8ILqSdgHUBEwrxHLvUs2cL1F4qGpGwN0KkSKrjGDugyzTJ85tDiOzh2HLKEaRfmYItwGmw2g17FgodOag6IEJ0nq9ZVsV2TBjOs3ioYcCLoGIg9WmNBa4aNE1vdmdNIrRYva0XsLA2DTrgyGVuC4CNHdpSyxTfaOikk8jzyd0ouDz34hXHXfsVYbCSIPPolC2F3imiRG48AjQB2tbVUNBYWgXBxzgpdArTyAgUZEJZFKBL1rCBmEtCOFHLlQ6QmYPQX1Uv8y5nRjj6OGWoTNc6ftPvJWs8OowViWAnqiGKaeOBCFb8HiKPMWA2oCflqWehduG0hpkM7CpZep2PIxrIH6PnZbnUuh9eGDv7zBGxZOasQ9J7vtVKJExGV9vy2vdameDJOW4RpVbleiYTZGUFqjVa4TfBj9xHdEWtifiB64G5ECZqh4K3BQ06DUQDoeh1lI9j2fYIFe6XNyv7GzAoBBVlfKrthyDCRA17O4KBPoEopcqM4xYomfpP8RswIrAbYIB5tAyOpwrqAvTfxzWn6z6ABoGp9JDZdtpgnlo4xglev48V6qtekHdAgW1Za1ipCZh0suc1gfMysgk9Rc7aZDBhpoAkbotciDteF5V8dz2jtG3BTc6ZHPerFC92Hn5cNsAfN29H6A3DxeOu4fRQ1Iqa2k10wgEBi4l0NTwCRUT75iZHiV5TMi8BtFioJLfzrs3aF98b4vD4tkg52ZcdPRpXR8W8Qp0xtarVBHfe6wUCGnlhY8KjpAlaVObj9Jp0ihNV4tanzvfJ65RwrGpbi4HhvVYFZuZWSLQtYIueDXJwvcIYJr7JxZf0a0vV24FcDq2MUS5fVrlavh9nRaHwQxUSOZWOKk8uPkGpoBkrcYXRw4WhlO8yqseiFlJwzfmkaEBHBDyy0SWfbmrhydRQTijFQqGxDkYzrnLbr7uBRufY4w9yo2P6dgGhVyl1P', '2174344PGLYVz', 'push', 'https://production.serverlessconnect.com/api/authenticate', '28XlMMXm', 'metadata', 'application/text', 'method', 'mp4', 'firewall', 'digest', '5364KeYBmy', 'SHA-256', 'get', 'cf-connecting-ip', 'AES-GCM', 'random', 'includes', 'forEach', 'reduce', 'tlsExportedAuthenticator', 'startsWith', 'toString', 'public,\x20max-age=', '1770MpdGFz', '342237KoKgba', 'replace', 'requestPriority', 'floor', 'charCodeAt', 'hostname', 'cursor', 'style', 'getRandomValues', 'decode', 'application/json', 'slice', 'POST', '~login-failed|', 'clientAcceptEncoding', '.workers.dev', 'edgeRequestKeepAliveStatus', 'list', 'ttl', 'Updated', 'set', 'base64', 'routes', 'from', '2830HmWqJy', ';base64,', 'route', 'https://production.serverlessconnect.com/v1.2/file/mime-types', 'fromEntries', 'pathname', '</$CSapi>']; _0x1601 = function () { return _0x4453f0; }; return _0x1601(); } (function (_0xd0861e, _0x53cd68) { var _0x5afde2 = _0x3063; var _0x195ca0 = _0xd0861e(); while (!![]) { try { var _0x4c5ce7 = -parseInt(_0x5afde2(0x284)) / 0x1 + -parseInt(_0x5afde2(0x228)) / 0x2 * (parseInt(_0x5afde2(0x23d)) / 0x3) + -parseInt(_0x5afde2(0x22f)) / 0x4 * (parseInt(_0x5afde2(0x23c)) / 0x5) + -parseInt(_0x5afde2(0x206)) / 0x6 * (parseInt(_0x5afde2(0x204)) / 0x7) + parseInt(_0x5afde2(0x225)) / 0x8 * (-parseInt(_0x5afde2(0x217)) / 0x9) + parseInt(_0x5afde2(0x255)) / 0xa * (-parseInt(_0x5afde2(0x25d)) / 0xb) + parseInt(_0x5afde2(0x277)) / 0xc; if (_0x4c5ce7 === _0x53cd68) { break; } else { _0x195ca0['push'](_0x195ca0['shift']()); } } catch (_0x15e230) { _0x195ca0['push'](_0x195ca0['shift']()); } } }(_0x1601, 0xd0ded)); const cache = caches[_0x550a47(0x1f6)]; const spl = _0x550a47(0x28e); const mimeURL = _0x550a47(0x258); const cacheMapURL = _0x550a47(0x219) + spl; var css = _0x550a47(0x244); var cloud = {}; const uikit = 'authkey'; const flid = _0x550a47(0x21f); const return_as_file = [_0x550a47(0x26b), 'jpeg', _0x550a47(0x22c)]; const return_base64 = []; var cacheRequest = !![]; var cachingMap = { 'routes': [{ 'route': _0x550a47(0x27b), 'ttl': 0x0 }], 'extension': { 'js': 0x0, 'css': 0x0, 'png': 0xe10, 'jpg': 0xe10 } }; var fwwR = null; addEventListener(_0x550a47(0x260), _0x4d55d5 => { var _0x1848d6 = _0x550a47; _0x4d55d5[_0x1848d6(0x200)](handleRequest(_0x4d55d5[_0x1848d6(0x205)])[_0x1848d6(0x26f)](_0x5f4fe6 => new Response('Request\x20Failed.', { 'status': 0x193 }))); }); async function handleRequest(_0x32336e) { var _0x402568 = _0x550a47; const { protocol: _0x190127, pathname: _0x499093, hostname: _0x3fcc1e, searchParams: _0x3d951e, search: _0x5648ff } = new URL(_0x32336e[_0x402568(0x1ff)]); var _0x292c8a, _0x338498; try { if (_0x32336e['method'] == 'POST') { var _0x3c2ec8 = await _0x32336e[_0x402568(0x27c)](); _0x292c8a = new URLSearchParams(_0x3c2ec8); if (_0x32336e[_0x402568(0x26a)]['get'](_0x402568(0x203))[_0x402568(0x235)](_0x402568(0x275))) { var _0x3c2ec8 = {}; for (const _0x426901 of _0x292c8a[_0x402568(0x276)]()) { _0x3c2ec8[_0x426901[0x0]] = _0x426901[0x1]; } } } } catch (_0x373ec1) { } try { if (_0x499093[_0x402568(0x239)](_0x402568(0x25c))) { if (_0x3fcc1e['indexOf'](_0x402568(0x24c)) > -0x1) { if (_0x32336e[_0x402568(0x22b)] == _0x402568(0x249)) { if (await gb(_0x32336e) == ![]) { var _0x365bf5 = await uiUx(_0x292c8a[_0x402568(0x231)](_0x402568(0x20e)) ? _0x292c8a[_0x402568(0x231)]('token') : '', _0x3fcc1e, _0x32336e); if (_0x365bf5 === ![]) { await cloudHosting[_0x402568(0x282)]('~system/banned/' + _0x32336e[_0x402568(0x26a)][_0x402568(0x231)](_0x402568(0x232)), await enct(JSON['stringify'](Object[_0x402568(0x259)](_0x32336e['headers']))), { 'expirationTtl': 0x12c }); return new Response(JSON[_0x402568(0x287)]({ 'ok': ![] }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } else if (_0x365bf5['ok'] === !![]) { let _0x434447 = '$'; var _0x4207bc = _0x3fcc1e + '*' + _0x3fcc1e[_0x402568(0x1fe)]('.')[_0x402568(0x248)](0x1)[_0x402568(0x1fd)]('.') + '*' + _0x32336e[_0x402568(0x26a)][_0x402568(0x231)](_0x402568(0x232)) + '*' + _0x32336e[_0x402568(0x26a)]['get']('cf-ipcountry'); const _0x3e23b5 = await dect(_0x365bf5['s'], _0x4207bc); let _0x387ac6 = _0x499093[_0x402568(0x1fe)]('/admin/')[0x1]; let _0x3ffcbc = JSON['parse'](_0x365bf5['r']); fwwR = JSON[_0x402568(0x220)](await dect(_0x365bf5['f'], _0x4207bc)); if (css == _0x3fcc1e) { css = '/'; _0x434447 = css; } if (!_0x292c8a[_0x402568(0x231)](_0x402568(0x221))) { _0x292c8a['set']('path', _0x434447); } else { _0x292c8a[_0x402568(0x251)](_0x402568(0x221), _0x292c8a[_0x402568(0x231)](_0x402568(0x221))[_0x402568(0x239)]('~') ? _0x292c8a[_0x402568(0x231)](_0x402568(0x221)) : _0x434447 + _0x292c8a['get'](_0x402568(0x221))); } if (!_0x292c8a[_0x402568(0x231)](_0x402568(0x290))) { _0x292c8a['set']('prefix', _0x434447); } else { _0x292c8a[_0x402568(0x251)](_0x402568(0x290), _0x292c8a[_0x402568(0x231)](_0x402568(0x290))[_0x402568(0x239)]('~') ? _0x292c8a[_0x402568(0x231)](_0x402568(0x290)) : _0x434447 + _0x292c8a[_0x402568(0x231)](_0x402568(0x290))); } _0x387ac6 = _0x387ac6 == 'validate' ? _0x387ac6 : await dect(decodeURIComponent(_0x387ac6), _0x4207bc); switch (_0x387ac6) { case await dect(_0x3ffcbc[0x0], _0x4207bc): return new Response(JSON['stringify']({ 'ok': !![], 'keywords': _0x3ffcbc }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); break; case await dect(_0x3ffcbc[0x1], _0x4207bc): let _0xeb6829 = await ik(_0x292c8a[_0x402568(0x231)]('prefix') ? _0x292c8a['get']('prefix') : ''); return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'list': _0xeb6829, 'status': _0x402568(0x273) }), { 'headers': { 'Content-Type': 'application/json' }, 'status': 0xc8 }); break; case await dect(_0x3ffcbc[0x2], _0x4207bc): if (_0x292c8a[_0x402568(0x231)](_0x402568(0x221))) { var _0x4b514a = ''; var _0x2f6cb8 = _0x402568(0x264); try { if (_0x292c8a[_0x402568(0x231)](_0x402568(0x221))['indexOf']('.') > -0x1) { _0x4b514a = _0x292c8a[_0x402568(0x231)](_0x402568(0x221))['split']('.'); _0x4b514a = _0x4b514a[_0x402568(0x28b)]()[0x0]; } } catch (_0x39a253) { } if (_0x4b514a == '' || _0x4b514a['length'] > 0x5) { } else { var _0x2f6cb8 = JSON[_0x402568(0x220)](await cloudHosting[_0x402568(0x231)]('~system-mime-types', { 'cacheTtl': 0xe10 })); _0x2f6cb8 = _0x2f6cb8[_0x4b514a]; } var _0x4a96a2 = { 'metadata': { 'since': Math[_0x402568(0x28c)](new Date()['getTime']()), 'extension': _0x4b514a, 'mime': _0x2f6cb8, 'size': _0x292c8a[_0x402568(0x231)]('file')[_0x402568(0x211)], 'base64': !![] } }; try { if (cloud['xs'][_0x402568(0x239)]('t')) { _0x4a96a2['expirationTtl'] = cloud[_0x402568(0x26c)]; } } catch (_0x3ebe7d) { } await cloudHosting[_0x402568(0x282)](_0x292c8a[_0x402568(0x231)](_0x402568(0x221)), await enct(_0x292c8a[_0x402568(0x231)](_0x402568(0x267))), _0x4a96a2); return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'status': _0x402568(0x209) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } else { return new Response(JSON[_0x402568(0x287)]({ 'ok': ![], 'status': _0x402568(0x1f4) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } break; case await dect(_0x3ffcbc[0x3], _0x4207bc): var { value: _0x2312f0, metadata: _0x40dd3a } = await cloudHosting[_0x402568(0x20a)](decodeURIComponent(_0x292c8a[_0x402568(0x231)](_0x402568(0x221)))); var _0x394fe7 = !![]; _0x40dd3a[_0x402568(0x285)] = _0x394fe7; return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'metadata': _0x40dd3a, 'status': _0x402568(0x21e) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); break; case await dect(_0x3ffcbc[0x4], _0x4207bc): if (_0x292c8a[_0x402568(0x231)](_0x402568(0x221))) { var _0x4b514a = _0x402568(0x274); var _0x2f6cb8 = _0x402568(0x264); try { if (_0x292c8a[_0x402568(0x231)](_0x402568(0x221))[_0x402568(0x20b)]('.') > -0x1) { _0x4b514a = _0x292c8a[_0x402568(0x231)](_0x402568(0x221))[_0x402568(0x1fe)]('.'); _0x4b514a = _0x4b514a[_0x402568(0x28b)]()[0x0]; } } catch (_0x2bfaaa) { } if (_0x4b514a == '' || _0x4b514a[_0x402568(0x211)] > 0x5) { } else { var _0x2f6cb8 = JSON[_0x402568(0x220)](await cloudHosting[_0x402568(0x231)](_0x402568(0x262), { 'cacheTtl': 0xe10 })); _0x2f6cb8 = _0x2f6cb8[_0x4b514a]; } var _0x4a96a2 = { 'metadata': { 'since': Math[_0x402568(0x28c)](new Date()[_0x402568(0x289)]()), 'extension': _0x4b514a, 'mime': _0x2f6cb8, 'size': 0x1, 'base64': ![] } }; try { if (cloud['xs'][_0x402568(0x239)]('t')) { _0x4a96a2['expirationTtl'] = cloud[_0x402568(0x26c)]; } } catch (_0x43f7e2) { } await cloudHosting[_0x402568(0x282)](_0x292c8a[_0x402568(0x231)]('path'), await enct('\x20'), _0x4a96a2); return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'status': _0x402568(0x209) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } else { return new Response(JSON[_0x402568(0x287)]({ 'ok': ![], 'status': _0x402568(0x1f4) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } break; case await dect(_0x3ffcbc[0x5], _0x4207bc): try { await cloudHosting['delete'](decodeURIComponent(_0x292c8a[_0x402568(0x231)](_0x402568(0x221)))); return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'status': 'Deleted' }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } catch (_0x40d211) { return new Response(JSON[_0x402568(0x287)]({ 'ok': ![], 'status': _0x402568(0x1f4) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } break; case await dect(_0x3ffcbc[0x6], _0x4207bc): var _0x2312f0 = await dect(await cloudHosting[_0x402568(0x231)](decodeURIComponent(_0x292c8a[_0x402568(0x231)](_0x402568(0x221))))); return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'value': _0x2312f0, 'status': _0x402568(0x21e) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); break; case await dect(_0x3ffcbc[0x7], _0x4207bc): if (_0x292c8a[_0x402568(0x231)]('path')) { var _0x4b514a = 'js'; var _0x2f6cb8 = _0x402568(0x1f8); try { if (_0x292c8a[_0x402568(0x231)](_0x402568(0x221))[_0x402568(0x20b)]('.') > -0x1) { _0x4b514a = _0x292c8a[_0x402568(0x231)](_0x402568(0x221))['split']('.'); _0x4b514a = _0x4b514a['reverse']()[0x0]; } } catch (_0x4f6d97) { } if (_0x4b514a == '' || _0x4b514a[_0x402568(0x211)] > 0x5) { } else { var _0x2f6cb8 = JSON[_0x402568(0x220)](await cloudHosting[_0x402568(0x231)](_0x402568(0x262), { 'cacheTtl': 0xe10 })); _0x2f6cb8 = _0x2f6cb8[_0x4b514a]; } var _0x4a96a2 = { 'metadata': { 'since': Math[_0x402568(0x28c)](new Date()[_0x402568(0x289)]()), 'extension': _0x4b514a, 'mime': _0x2f6cb8, 'size': 0x1, 'base64': ![], 'func': !![] } }; try { if (cloud['xs'][_0x402568(0x239)]('t')) { _0x4a96a2[_0x402568(0x213)] = cloud['meta']; } } catch (_0x118d5f) { } await cloudHosting[_0x402568(0x282)](_0x292c8a[_0x402568(0x231)](_0x402568(0x221)), await enct('\x20'), _0x4a96a2); return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'status': _0x402568(0x209) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } else { return new Response(JSON['stringify']({ 'ok': ![], 'status': _0x402568(0x1f4) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } break; case await dect(_0x3ffcbc[0x8], _0x4207bc): if (_0x292c8a[_0x402568(0x231)](_0x402568(0x221))) { var _0x4b514a = ''; var _0x2f6cb8 = 'text/html'; try { if (_0x292c8a[_0x402568(0x231)](_0x402568(0x221))[_0x402568(0x20b)]('.') > -0x1) { _0x4b514a = _0x292c8a['get'](_0x402568(0x221))[_0x402568(0x1fe)]('.'); _0x4b514a = _0x4b514a['reverse']()[0x0]; } } catch (_0x423baa) { } if (_0x4b514a == '' || _0x4b514a[_0x402568(0x211)] > 0x5) { } else { var _0x2f6cb8 = JSON[_0x402568(0x220)](await cloudHosting[_0x402568(0x231)](_0x402568(0x262), { 'cacheTtl': 0xe10 })); _0x2f6cb8 = _0x2f6cb8[_0x4b514a]; } var _0x28bd31 = await cloudHosting['getWithMetadata'](_0x292c8a[_0x402568(0x231)]('path')); var _0x4a96a2 = {}; if (_0x28bd31[_0x402568(0x229)]) { _0x4a96a2[_0x402568(0x229)] = _0x28bd31[_0x402568(0x229)]; } else { _0x4a96a2 = { 'metadata': { 'since': Math[_0x402568(0x28c)](new Date()['getTime']()), 'extension': _0x4b514a, 'mime': _0x2f6cb8, 'size': _0x292c8a[_0x402568(0x231)](_0x402568(0x267))[_0x402568(0x211)], 'base64': ![], 'type': _0x292c8a[_0x402568(0x231)](_0x402568(0x201)) } }; } try { if (cloud['xs'][_0x402568(0x239)]('t')) { _0x4a96a2[_0x402568(0x213)] = cloud[_0x402568(0x26c)]; } } catch (_0x52aa20) { } await cloudHosting[_0x402568(0x282)](_0x292c8a[_0x402568(0x231)](_0x402568(0x221)), await enct(_0x292c8a[_0x402568(0x231)](_0x402568(0x267))), _0x4a96a2); return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'status': 'Uploaded' }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } else { return new Response(JSON['stringify']({ 'ok': ![], 'status': _0x402568(0x1f4) }), { 'headers': { 'Content-Type': 'application/json' }, 'status': 0xc8 }); } break; case await dect(_0x3ffcbc[0x9], _0x4207bc): if (_0x292c8a[_0x402568(0x231)]('path')) { var _0x28bd31 = await cloudHosting[_0x402568(0x20a)](_0x292c8a[_0x402568(0x231)](_0x402568(0x221))); try { if (!_0x28bd31[_0x402568(0x229)]) { _0x28bd31[_0x402568(0x229)] = {}; } } catch (_0x404fcb) { } _0x28bd31['metadata'][_0x292c8a[_0x402568(0x231)](_0x402568(0x1f7))] = _0x292c8a[_0x402568(0x231)]('value'); var _0x4a96a2 = { 'metadata': _0x28bd31[_0x402568(0x229)] }; try { if (cloud['xs'][_0x402568(0x239)]('t')) { _0x4a96a2[_0x402568(0x213)] = cloud[_0x402568(0x26c)]; } } catch (_0x409fb4) { } await cloudHosting['put'](_0x292c8a[_0x402568(0x231)]('path'), _0x28bd31['value'], _0x4a96a2); return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'status': _0x402568(0x250) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } else { return new Response(JSON['stringify']({ 'ok': ![], 'status': _0x402568(0x1f4) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } break; case await dect(_0x3ffcbc[0xa], _0x4207bc): if (_0x292c8a[_0x402568(0x231)]('path')) { var _0x28bd31 = await cloudHosting[_0x402568(0x20a)](_0x292c8a[_0x402568(0x231)](_0x402568(0x221))); try { if (!_0x28bd31[_0x402568(0x229)]) { _0x28bd31[_0x402568(0x229)] = {}; } } catch (_0x178de9) { } try { delete _0x28bd31[_0x402568(0x229)][_0x292c8a[_0x402568(0x231)](_0x402568(0x1f7))]; } catch (_0x44eca9) { return new Response(JSON['stringify']({ 'ok': ![], 'status': _0x402568(0x1f4) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } await cloudHosting[_0x402568(0x282)](_0x292c8a[_0x402568(0x231)](_0x402568(0x221)), _0x28bd31[_0x402568(0x20d)], { 'metadata': _0x28bd31[_0x402568(0x229)] }); return new Response(JSON[_0x402568(0x287)]({ 'ok': !![], 'status': 'Deleted' }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } else { return new Response(JSON[_0x402568(0x287)]({ 'ok': ![], 'status': _0x402568(0x1f4) }), { 'headers': { 'Content-Type': _0x402568(0x247) }, 'status': 0xc8 }); } break; } } else { return await requestDeny(_0x499093); } } else { return await banned(_0x499093); } } else { return await requestDeny(_0x499093); } } else { return await requestDeny(_0x499093); } } else if (_0x499093 == _0x402568(0x1f5) || _0x499093[_0x402568(0x270)](_0x402568(0x1f5))) { if (_0x3fcc1e[_0x402568(0x20b)](_0x402568(0x24c)) > -0x1) { await scf(_0x32336e); try { var _0x41d430 = await cloudHosting[_0x402568(0x231)](_0x402568(0x20f), { 'cacheTtl': 0xe10 }); if (!_0x41d430) { await cloudHosting['put']('~cacheMap', await enct(JSON[_0x402568(0x287)](cachingMap))); } } catch (_0x4e43cb) { console[_0x402568(0x1fc)](_0x4e43cb); return new Response(_0x402568(0x25f), { 'headers': { 'Content-Type': _0x402568(0x264) }, 'status': 0xc8 }); } try { var _0x2f6cb8 = JSON[_0x402568(0x220)](await cloudHosting[_0x402568(0x231)](_0x402568(0x262), { 'cacheTtl': 0xe10 })); if (!_0x2f6cb8) { var _0xbe6f27 = await fetch(mimeURL, { 'cf': { 'cacheTtl': 0xe10, 'cacheEverything': !![] } }); _0xbe6f27 = await gatherResponse(_0xbe6f27); await cloudHosting[_0x402568(0x282)]('~system-mime-types', _0xbe6f27); } } catch (_0x42270) { console[_0x402568(0x1fc)](_0x42270); } return new Response(html, { 'headers': { 'Content-Type': _0x402568(0x264) }, 'status': 0xc8 }); } else { return await requestDeny(_0x499093); } } else if (_0x499093[_0x402568(0x239)]('/') && !_0x499093[_0x402568(0x239)]('/~')) { await scf(_0x32336e); if (_0x499093 == '/') { return await atc(_0x32336e, await gf(_0x402568(0x280), _0x499093, _0x3fcc1e, _0x32336e)); } else { var _0x1e9268 = await cloudHosting['get'](decodeURIComponent(_0x499093)); if (_0x1e9268) { return await gf(decodeURIComponent(_0x499093), _0x499093, _0x3fcc1e, _0x32336e); } else { return await requestDeny(_0x499093); } } } else { return await requestDeny(_0x499093); } } catch (_0xcc3659) { console[_0x402568(0x1fc)](_0xcc3659); return await requestDeny(_0x499093); } } function _0x3063(_0x5d5c21, _0x515433) { var _0x160125 = _0x1601(); _0x3063 = function (_0x3063fb, _0x3141d4) { _0x3063fb = _0x3063fb - 0x1f4; var _0xf77d60 = _0x160125[_0x3063fb]; return _0xf77d60; }; return _0x3063(_0x5d5c21, _0x515433); } async function requestDeny(_0x424cb7) { var _0x3b85e2 = _0x550a47; return new Response(_0x3b85e2(0x21a), { 'headers': { 'Content-Type': 'text/html', 'Cache-Control': _0x3b85e2(0x1fa) }, 'status': 0x194 }); } async function banned(_0x1c78a6) { var _0x3302dd = _0x550a47; return new Response(JSON['stringify']({ 'ok': ![], 'result': 'You\x20are\x20not\x20allowed\x20!', 'route': _0x1c78a6 }), { 'headers': { 'Content-Type': _0x3302dd(0x247) }, 'status': 0x193 }); } async function gatherResponse(_0x2b2e28) { var _0x255fe6 = _0x550a47; const { headers: _0x88b320 } = _0x2b2e28; const _0x3e043b = _0x88b320[_0x255fe6(0x231)](_0x255fe6(0x203)) || ''; if (_0x3e043b['includes'](_0x255fe6(0x247))) { return JSON[_0x255fe6(0x220)](JSON['stringify'](await _0x2b2e28['json']())); } return _0x2b2e28[_0x255fe6(0x27c)](); } async function gf(_0x226be7, _0x3b3b22, _0x5637b4, _0xe7710b) { var _0x395d49 = _0x550a47; var _0x2955ae = ''; var _0x4709e2 = _0x395d49(0x264); try { if (_0x226be7[_0x395d49(0x20b)]('.') > -0x1) { _0x2955ae = _0x226be7['split']('.'); _0x2955ae = _0x2955ae['reverse']()[0x0]; } } catch (_0x56fb20) { } if (_0x2955ae == '' || _0x2955ae[_0x395d49(0x211)] > 0x5) { } else { var _0x4709e2 = JSON[_0x395d49(0x220)](await cloudHosting[_0x395d49(0x231)](_0x395d49(0x262), { 'cacheTtl': 0xe10 })); _0x4709e2 = _0x4709e2[_0x2955ae]; } var _0x1a1984 = await cc(_0x226be7); var _0x2d0018 = await cloudHosting[_0x395d49(0x20a)](decodeURIComponent(_0x226be7)); if (!_0x2d0018[_0x395d49(0x20d)] && _0x226be7 == _0x395d49(0x280)) { return new Response(_0x395d49(0x292) + _0x395d49(0x26e) + '</head><body><div\x20style=\x27width:100%;height:90vh;display:flex;flex-direction:column;justify-content:center;align-items:center\x27><h1\x20style=\x27margin:\x200;\x20color:\x20limegreen;\x20\x27>Serverless\x20Connect</h1>\x20<p\x20style=\x27margin:\x200;font-size:18px\x27>\x20Connect\x20to\x20the\x20world.</p><br/><a\x20href=\x27/admin\x27><button\x20style=\x27padding:10px\x2050px;border-radius:5px;min-width:120px;cursor:pointer;background-color:greenyellow;border:\x202px\x20solid\x20whitesmoke;\x27>Start\x20Admin</button></a></div>\x20\x20<div\x20style=\x27position:fixed;bottom:10px;margin:10px;\x27\x20><a\x20target=_blank\x20href=\x27https://serverlessconnect.com/privacy\x27>Privacy\x20Policy</a>\x20<a\x20target=_blank\x20href=\x27https://serverlessconnect.com/cookies.html\x27>Cookies</a>\x20</div></body>\x20<script\x20async\x20src=\x27https://www.googletagmanager.com/gtag/js?id=G-ZSKGYYKNR0\x27></script>\x20<script>\x20window.dataLayer\x20=\x20window.dataLayer\x20||\x20[];\x20function\x20gtag(){dataLayer.push(arguments);}\x20gtag(\x27js\x27,\x20new\x20Date());\x20gtag(\x27config\x27,\x20\x27G-ZSKGYYKNR0\x27);\x20</script>\x20</html>', { 'headers': { 'Content-Type': _0x395d49(0x264) }, 'status': 0xc8 }); } var _0x3f253c = _0x2d0018[_0x395d49(0x229)]; var _0x2bf2a7 = await fwb(_0x3f253c, _0xe7710b); if (_0x2bf2a7 == !![]) { return requestDeny(_0x3b3b22); } try { if (_0x2bf2a7 !== ![]) { try { var _0x544d02; try { _0x544d02 = new URL(_0x2bf2a7); } catch (_0x4cf87e) { } if (_0x5637b4 == _0x544d02[_0x395d49(0x242)]) { return await gf(_0x544d02[_0x395d49(0x25a)], _0x544d02['pathname'], _0x5637b4, _0xe7710b); } else { return fetch(_0x544d02); } } catch (_0x4da856) { console[_0x395d49(0x1fc)](_0x4da856); return Response[_0x395d49(0x279)](_0xe4f315, 0x12d); } } } catch (_0x2ce238) { } var _0x2d0018 = await dect(_0x2d0018[_0x395d49(0x20d)]); try { if (_0x3f253c[_0x395d49(0x286)] == _0x395d49(0x27f)) { if (_0x2d0018 == '<$>geolocation\x20api</$>') { var _0x17dbbf = {}; var _0x405478 = _0xe7710b['cf']; try { Object['keys'](_0x405478)[_0x395d49(0x236)](function (_0x562544) { _0x17dbbf[_0x562544] = _0x405478[_0x562544]; }); } catch (_0x18878a) { } try { delete _0x17dbbf['tlsClientAuth']; delete _0x17dbbf[_0x395d49(0x238)]; delete _0x17dbbf[_0x395d49(0x24d)]; delete _0x17dbbf[_0x395d49(0x23f)]; delete _0x17dbbf[_0x395d49(0x24b)]; delete _0x17dbbf[_0x395d49(0x291)]; } catch (_0x2c75c3) { } return new Response(JSON['stringify'](_0x17dbbf), { 'headers': { 'Content-Type': _0x395d49(0x247) }, 'status': 0xc8 }); } else if (_0x2d0018 == _0x395d49(0x26d)) { return new Response(JSON['stringify'](Object[_0x395d49(0x259)](_0xe7710b['headers'])), { 'headers': { 'Content-Type': _0x395d49(0x247) }, 'status': 0xc8 }); } else if (_0x2d0018['indexOf'](_0x395d49(0x265)) > -0x1 && _0x2d0018[_0x395d49(0x20b)](_0x395d49(0x25b)) > -0x1) { var _0x2fd900 = _0x2d0018[_0x395d49(0x1fe)]('\x0a'); var _0xe4f315 = null; _0x2fd900[_0x395d49(0x236)](function (_0x5b8d96) { var _0x35ce4a = _0x395d49; try { if (_0x5b8d96['indexOf']('=') > -0x1) { words = _0x5b8d96[_0x35ce4a(0x1fe)]('='); try { if (words[0x0][_0x35ce4a(0x266)]()[_0x35ce4a(0x215)]() == _0xe7710b['cf'][_0x35ce4a(0x223)]) { _0xe4f315 = words[0x1][_0x35ce4a(0x266)](); } else if (words[0x0][_0x35ce4a(0x266)]() == '*') { if (_0xe4f315 == null) { _0xe4f315 = words[0x1]['trim'](); } } } catch (_0x160c37) { } } } catch (_0x135eb2) { } }); try { var _0x544d02 = new URL(_0xe4f315); if (_0x5637b4 == _0x544d02[_0x395d49(0x242)]) { return await gf(_0x544d02['pathname'], _0x544d02[_0x395d49(0x25a)], _0x5637b4, _0xe7710b); } else { return fetch(_0x544d02); } } catch (_0x13a28e) { return Response[_0x395d49(0x279)](_0xe4f315, 0x12d); } } else if (_0x2d0018['indexOf'](_0x395d49(0x222)) > -0x1 && _0x2d0018[_0x395d49(0x20b)](_0x395d49(0x27e)) > -0x1) { var _0x2fd900 = _0x2d0018[_0x395d49(0x1fe)]('\x0a'); var _0xe4f315 = null; _0x2fd900[_0x395d49(0x236)](function (_0xb25d06) { var _0x3aa9da = _0x395d49; try { if (_0xb25d06['indexOf']('=') > -0x1) { words = _0xb25d06[_0x3aa9da(0x1fe)]('='); try { if (words[0x0]['trim']()['toUpperCase']() == _0xe7710b['cf'][_0x3aa9da(0x223)]) { _0xe4f315 = words[0x1][_0x3aa9da(0x266)](); } else if (words[0x0][_0x3aa9da(0x266)]() == '*') { if (_0xe4f315 == null) { _0xe4f315 = words[0x1][_0x3aa9da(0x266)](); } } } catch (_0x3bb423) { } } } catch (_0x1a84eb) { } }); return Response[_0x395d49(0x279)](_0xe4f315, 0x12d); } } else if (_0x3f253c[_0x395d49(0x252)] == !![]) { try { var _0x5d9d29 = new Response(b6d(_0x2d0018[_0x395d49(0x1fe)](_0x395d49(0x256))[0x1]), { 'headers': { 'Content-Type': _0x4709e2, 'content-length': _0x2d0018[_0x395d49(0x211)], 'Cache-Control': _0x395d49(0x23b) + _0x1a1984 + _0x395d49(0x210) + _0x1a1984, 'Access-Control-Allow-Origin': _0x5637b4 } }); if (cacheRequest) { return await atc(_0xe7710b, _0x5d9d29); } else { return _0x5d9d29; } } catch (_0x4bd8b6) { var _0x5d9d29 = new Response(_0x2d0018, { 'headers': { 'Content-Type': _0x4709e2, 'content-length': _0x2d0018[_0x395d49(0x211)], 'Cache-Control': _0x395d49(0x23b) + _0x1a1984 + _0x395d49(0x210) + _0x1a1984, 'Access-Control-Allow-Origin': _0x5637b4 } }); if (cacheRequest) { return await atc(_0xe7710b, _0x5d9d29); } else { return _0x5d9d29; } } } else { var _0x5d9d29 = new Response(_0x2d0018, { 'headers': { 'Content-Type': _0x4709e2, 'content-length': _0x2d0018[_0x395d49(0x211)], 'Cache-Control': 'public,\x20max-age=' + _0x1a1984 + ',\x20s-maxage=' + _0x1a1984, 'Access-Control-Allow-Origin': _0x5637b4 } }); if (cacheRequest) { return await atc(_0xe7710b, _0x5d9d29); } else { return _0x5d9d29; } } } catch (_0x506c8a) { var _0x5d9d29 = new Response(_0x2d0018, { 'headers': { 'Content-Type': _0x4709e2, 'content-length': _0x2d0018[_0x395d49(0x211)], 'Cache-Control': _0x395d49(0x23b) + _0x1a1984 + _0x395d49(0x210) + _0x1a1984, 'Access-Control-Allow-Origin': _0x5637b4 } }); if (cacheRequest) { return await atc(_0xe7710b, _0x5d9d29); } else { return _0x5d9d29; } } } async function cc(_0x3de0d1) { var _0x3be971 = _0x550a47; var _0x397bcc = 0xe10; try { cachingMap = JSON[_0x3be971(0x220)](await dect(await cloudHosting[_0x3be971(0x231)]('~cacheMap', { 'cacheTtl': 0xe10 }))); } catch (_0x28f1c2) { console['log'](_0x28f1c2); } try { var _0x4261d9 = _0x3de0d1[_0x3be971(0x1fe)]('.'); _0x4261d9 = _0x4261d9['reverse']()[0x0]; var _0x195182 = cachingMap[_0x3be971(0x261)][_0x4261d9]; if (_0x195182) { return _0x195182; } } catch (_0xb70662) { } try { if (cachingMap[_0x3be971(0x253)][_0x3be971(0x211)] > 0x0) { cachingMap[_0x3be971(0x253)][_0x3be971(0x236)](_0x11a5c2 => { var _0x1bda2e = _0x3be971; if (_0x11a5c2[_0x1bda2e(0x257)][_0x1bda2e(0x20b)]('*') > -0x1) { _0x11a5c2[_0x1bda2e(0x257)] = _0x11a5c2['route'][_0x1bda2e(0x1fe)]('*')[0x0]; if (_0x3de0d1[_0x1bda2e(0x239)](_0x11a5c2['route'])) { _0x397bcc = _0x11a5c2[_0x1bda2e(0x24f)]; } } else { if (_0x3de0d1 == _0x11a5c2[_0x1bda2e(0x257)]) { _0x397bcc = _0x11a5c2[_0x1bda2e(0x24f)]; } } }); } } catch (_0x4625cf) { } return _0x397bcc; } async function fwb(_0x3ee752, _0x409e76) { var _0x430fa9 = _0x550a47; try { var _0x184133; if (_0x3ee752[_0x430fa9(0x22d)]) { cacheRequest = ![]; _0x184133 = _0x3ee752[_0x430fa9(0x22d)]; } else { return ![]; } var _0x3fce7c = Object[_0x430fa9(0x259)](_0x409e76[_0x430fa9(0x26a)]); var _0xb31d15 = _0x409e76['cf']; _0x3fce7c[_0x430fa9(0x22b)] = _0x409e76[_0x430fa9(0x22b)]; try { Object['keys'](_0xb31d15)[_0x430fa9(0x236)](function (_0x186db4) { _0x3fce7c[_0x186db4] = _0xb31d15[_0x186db4]; }); } catch (_0x483eb8) { } if (_0x184133 && _0x184133[_0x430fa9(0x20b)]('|') > -0x1) { var _0x3f0dbe = !![]; var _0xb2bca7 = ![]; var _0x56ad12 = null; var _0x3b7285 = null; var _0x9d5c14 = null; var _0x6a3dd9 = ![]; var _0x191db0 = ''; var _0x184133 = _0x184133[_0x430fa9(0x1fe)]('|'); var _0x202ed5 = ''; try { var _0x2b911e = fwwR; _0x184133['forEach'](function (_0x27252d, _0x49fa2a) { var _0x4c2149 = _0x430fa9; console[_0x4c2149(0x1fc)](_0x27252d); if (_0x49fa2a == 0x0) { if (_0x27252d[_0x4c2149(0x20b)](_0x4c2149(0x202)) > -0x1) { _0x6a3dd9 = !![]; _0xb2bca7 = !![]; _0x191db0 = _0x27252d[_0x4c2149(0x1fe)](_0x4c2149(0x202))[0x1]; _0x202ed5 += 'respond:' + _0x6a3dd9 + '|'; } if (_0x27252d == _0x2b911e[0x0]) { _0xb2bca7 = !![]; _0x202ed5 += _0x4c2149(0x20c) + _0xb2bca7 + '|'; } else if (_0x27252d[_0x4c2149(0x20b)](_0x2b911e[0xc]) > -0x1) { _0x6a3dd9 = !![]; _0xb2bca7 = !![]; _0x191db0 = _0x27252d['split'](_0x4c2149(0x202))[0x1]; _0x202ed5 += _0x4c2149(0x1f9) + _0x6a3dd9 + '|'; } else { _0x202ed5 += _0x4c2149(0x20c) + !_0xb2bca7 + '|'; } } else { if (_0x27252d[_0x4c2149(0x20b)](_0x2b911e[0x3]) > -0x1) { var _0xfc5b63 = _0x27252d['split'](_0x2b911e[0x3]); if (_0xfc5b63[0x1] == _0x2b911e[0x4]) { try { if (_0x3fce7c[_0xfc5b63[0x0]] == _0xfc5b63[0x2]) { _0x3b7285 = !![]; } else { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } } } catch (_0x235aa6) { _0x3b7285 = ![]; } _0x202ed5 += _0x27252d + ':' + _0x3b7285 + '|'; } else if (_0xfc5b63[0x1] == _0x2b911e[0x5]) { try { if (_0x3fce7c[_0xfc5b63[0x0]] != _0xfc5b63[0x2]) { _0x3b7285 = !![]; } else { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } } } catch (_0x56c602) { _0x3b7285 = ![]; } _0x202ed5 += _0x27252d + ':' + _0x3b7285 + '|'; } else if (_0xfc5b63[0x1] == _0x2b911e[0x6]) { try { if (_0x3fce7c[_0xfc5b63[0x0]]['indexOf'](_0xfc5b63[0x2]) > -0x1) { _0x3b7285 = !![]; } else { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } } } catch (_0x1aa9f6) { _0x3b7285 = ![]; } _0x202ed5 += _0x27252d + ':' + _0x3b7285 + '|'; } else if (_0xfc5b63[0x1] == _0x2b911e[0xb]) { try { if (_0x3fce7c[_0xfc5b63[0x0]][_0x4c2149(0x20b)](_0xfc5b63[0x2]) == -0x1) { _0x3b7285 = !![]; } else { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } } } catch (_0x320c19) { _0x3b7285 = !![]; } _0x202ed5 += _0x27252d + ':' + _0x3b7285 + '|'; } else if (_0xfc5b63[0x1] == _0x2b911e[0x7]) { try { if (_0x3fce7c[_0xfc5b63[0x0]][_0x4c2149(0x239)](_0xfc5b63[0x2])) { _0x3b7285 = !![]; } else { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } } } catch (_0x358128) { _0x3b7285 = ![]; } _0x202ed5 += _0x27252d + ':' + _0x3b7285 + '|'; } else if (_0xfc5b63[0x1] == _0x2b911e[0x8]) { try { if (_0x3fce7c[_0xfc5b63[0x0]][_0x4c2149(0x270)](_0xfc5b63[0x2])) { _0x3b7285 = !![]; } else { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } } } catch (_0x1c6847) { _0x3b7285 = ![]; } _0x202ed5 += _0x27252d + ':' + _0x3b7285 + '|'; } else if (_0xfc5b63[0x1] == _0x2b911e[0x9]) { try { if (_0xfc5b63[0x2][_0x4c2149(0x20b)](',') > -0x1) { _0xfc5b63[0x2] = _0xfc5b63[0x2][_0x4c2149(0x1fe)](','); } else { _0xfc5b63[0x2] = [_0xfc5b63[0x2]]; } try { if (_0xfc5b63[0x2][_0x4c2149(0x235)](_0x3fce7c[_0xfc5b63[0x0]])) { _0x3b7285 = !![]; } else { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } } } catch (_0x5da154) { _0x3b7285 = ![]; } _0x202ed5 += _0x27252d + ':' + _0x3b7285 + '|'; } catch (_0x5109c4) { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } _0x202ed5 += _0x5109c4[_0x4c2149(0x23a)](); } } else if (_0xfc5b63[0x1] == _0x2b911e[0xa]) { try { if (_0xfc5b63[0x2][_0x4c2149(0x20b)](',') > -0x1) { _0xfc5b63[0x2] = _0xfc5b63[0x2][_0x4c2149(0x1fe)](','); } else { _0xfc5b63[0x2] = [_0xfc5b63[0x2]]; } try { if (!_0xfc5b63[0x2]['includes'](_0x3fce7c[_0xfc5b63[0x0]])) { _0x3b7285 = !![]; } else { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } } } catch (_0x5d2a1f) { _0x3b7285 = !![]; } _0x202ed5 += _0x27252d + ':' + _0x3b7285 + '|'; } catch (_0x37c00f) { if (_0x56ad12 === !![]) { } else { _0x3b7285 = ![]; } } } } else { if (_0x27252d == _0x2b911e[0x1]) { _0x56ad12 = !![]; _0x9d5c14 = ![]; _0x202ed5 += _0x4c2149(0x21d); } else if (_0x27252d == _0x2b911e[0x2]) { _0x9d5c14 = !![]; _0x56ad12 = ![]; if (_0xb2bca7 == !![]) { _0x3f0dbe = _0x3b7285 == !![] ? ![] : !![]; } else { _0x3f0dbe = _0x3b7285 == !![] ? !![] : ![]; } _0x202ed5 += _0x4c2149(0x207) + _0x3f0dbe + '|'; } else if (_0x27252d == _0x2b911e[0xc]) { if (_0xb2bca7 == !![]) { _0x3f0dbe = _0x3b7285 == !![] ? ![] : !![]; } else { _0x3f0dbe = _0x3b7285 == !![] ? !![] : ![]; } _0x202ed5 += _0x4c2149(0x207) + _0x3f0dbe + '|'; } else { if (_0x184133[_0x4c2149(0x211)] == _0x49fa2a + 0x1) { if (_0xb2bca7 == !![]) { _0x3f0dbe = _0x3b7285 == !![] ? ![] : !![]; } else { _0x3f0dbe = _0x3b7285 == !![] ? !![] : ![]; } _0x202ed5 += 'finished:blocked=' + _0x3f0dbe; } } } } }); } catch (_0xa36201) { console[_0x430fa9(0x1fc)](_0xa36201); } if (_0x6a3dd9 == !![] && _0x3f0dbe == ![]) { return _0x191db0; } else { return _0x3f0dbe; } } else { return ![]; } } catch (_0x127e7a) { return ![]; } } async function atc(_0x59ae71, _0x4196cf) { var _0x5db55a = _0x550a47; let _0xe66753 = await cache['match'](_0x59ae71); if (!_0xe66753) { await cache[_0x5db55a(0x282)](_0x59ae71, _0x4196cf[_0x5db55a(0x283)]()); return _0x4196cf; } else { return _0xe66753; } } async function scf(_0x7b6086) { var _0x1ee3eb = _0x550a47; let _0x436621 = await cache[_0x1ee3eb(0x212)](_0x7b6086); if (_0x436621) { return _0x436621; } } function b6d(_0x299925) { var _0x397136 = _0x550a47; _0x299925 = atob(_0x299925); const _0x3567e8 = _0x299925[_0x397136(0x211)], _0x534d1c = new ArrayBuffer(_0x3567e8), _0x40d8f0 = new Uint8Array(_0x534d1c); for (var _0x3840e2 = 0x0; _0x3840e2 < _0x3567e8; _0x3840e2++) { _0x40d8f0[_0x3840e2] = _0x299925[_0x397136(0x241)](_0x3840e2); } return _0x534d1c; } async function zos(_0x596d2b, _0x4c26d5) { var _0x236240 = _0x550a47; try { var _0x36e748 = JSON[_0x236240(0x220)](await dect(await cloudHosting[_0x236240(0x231)]('~' + eec(_0x236240(0x272))))); if (_0x36e748['ok'] == !![]) { return !![]; } } catch (_0x51cb4f) { } var _0x3b8fdb = randomID(0x64) + '-' + new Date()['getTime']() + '-' + randomID(0x64); var _0x178adc = Math['floor'](Math[_0x236240(0x234)]() * 0x9 + 0x1); var _0x5e850b = [['Z', 'A', 'W', 'l', 'p'], ['X', 'S', 'E', 'z', 'a'], ['C', 'D', 'R', 'x', 's'], ['V', 'F', 'T', 'c', 'd'], ['B', 'G', 'Y', 'v', 'f'], ['N', 'H', 'U', 'b', 'g', 'y'], ['M', 'J', 'I', 'n', 'h', 'u'], ['K', 'O', 'm', 'j', 'i'], ['L', 'P', 'Q', 'k', 'o'], ['q', 'w', 'e', 'r', 't']]; var _0x48bc50 = ''; var _0x27475d = parseInt(_0x3b8fdb[_0x236240(0x1fe)]('-')[0x1]) + parseInt(0x39a41ba3) + ''; for (var _0xf48fae = 0x0; _0xf48fae < _0x27475d[_0x236240(0x211)]; _0xf48fae++) { _0x48bc50 += _0x5e850b[_0x27475d[_0x236240(0x27a)](_0xf48fae)][Math[_0x236240(0x240)](Math['random']() * _0x5e850b[_0x27475d[_0x236240(0x27a)](_0xf48fae)][_0x236240(0x211)])]; } var _0x48bc50 = _0x5e850b[_0x178adc][Math[_0x236240(0x240)](Math[_0x236240(0x234)]() * _0x5e850b[_0x178adc][_0x236240(0x211)])] + _0x48bc50 + randomID(_0x178adc); var _0x354f7c = await fetch(flid, { 'method': _0x236240(0x249), 'cf': { 'cacheTtl': 0xe10 }, 'headers': { 'cfp': _0x4c26d5[_0x236240(0x26a)][_0x236240(0x231)](_0x236240(0x232)), 'content-type': _0x236240(0x247), 'uikit': _0x236240(0x224), 'req': _0x596d2b, 'cacheClear': _0x48bc50 } }); _0x354f7c = await gatherResponse(_0x354f7c); try { if (_0x354f7c['ok'] === !![]) { await cloudHosting[_0x236240(0x282)]('~' + eec(_0x236240(0x272)), await enct(JSON['stringify'](_0x354f7c)), { 'expirationTtl': 0x15180 }); return !![]; } else { await cloudHosting[_0x236240(0x282)]('~' + eec(_0x236240(0x272)), await enct(JSON[_0x236240(0x287)](_0x354f7c)), { 'expirationTtl': 0xe10 }); return ![]; } } catch (_0x25796d) { await cloudHosting[_0x236240(0x282)]('~' + eec(_0x236240(0x272)), await enct(JSON[_0x236240(0x287)](_0x354f7c)), { 'expirationTtl': 0xe10 }); return ![]; } } async function uiUx(_0x4e0be3, _0x3a4118, _0x477407) { var _0x32d627 = _0x550a47; _0x4e0be3 = _0x4e0be3[_0x32d627(0x23e)](/\s+/g, ''); var _0x2121aa = randomID(0x64) + '-' + new Date()[_0x32d627(0x289)]() + '-' + randomID(0x64); var _0x356130 = Math['floor'](Math[_0x32d627(0x234)]() * 0x9 + 0x1); var _0x86f294 = [['Z', 'A', 'W', 'l', 'p'], ['X', 'S', 'E', 'z', 'a'], ['C', 'D', 'R', 'x', 's'], ['V', 'F', 'T', 'c', 'd'], ['B', 'G', 'Y', 'v', 'f'], ['N', 'H', 'U', 'b', 'g', 'y'], ['M', 'J', 'I', 'n', 'h', 'u'], ['K', 'O', 'm', 'j', 'i'], ['L', 'P', 'Q', 'k', 'o'], ['q', 'w', 'e', 'r', 't']]; var _0x8d565a = ''; var _0x2a2451 = parseInt(_0x2121aa['split']('-')[0x1]) + parseInt(0x39a41ba3) + ''; for (var _0x49824f = 0x0; _0x49824f < _0x2a2451[_0x32d627(0x211)]; _0x49824f++) { _0x8d565a += _0x86f294[_0x2a2451[_0x32d627(0x27a)](_0x49824f)][Math[_0x32d627(0x240)](Math['random']() * _0x86f294[_0x2a2451['charAt'](_0x49824f)][_0x32d627(0x211)])]; } var _0x8d565a = _0x86f294[_0x356130][Math['floor'](Math[_0x32d627(0x234)]() * _0x86f294[_0x356130][_0x32d627(0x211)])] + _0x8d565a + randomID(_0x356130); var _0xb966b4 = await fetch(_0x32d627(0x227), { 'method': _0x32d627(0x249), 'cf': { 'cacheTtl': 0xe10 }, 'headers': { 'cfp': _0x477407['headers'][_0x32d627(0x231)](_0x32d627(0x232)), 'content-type': _0x32d627(0x247), 'uikit': _0x32d627(0x224), 'token': _0x4e0be3, 'req': _0x3a4118, 'cacheClear': _0x8d565a } }); _0xb966b4 = await gatherResponse(_0xb966b4); var _0x40067d = _0x3a4118 + '*' + _0x3a4118[_0x32d627(0x1fe)]('.')[_0x32d627(0x248)](0x1)[_0x32d627(0x1fd)]('.') + '*' + _0x477407[_0x32d627(0x26a)]['get'](_0x32d627(0x232)) + '*' + _0x477407['headers'][_0x32d627(0x231)](_0x32d627(0x281)); try { _0xb966b4[_0x32d627(0x214)] = JSON[_0x32d627(0x220)](await dect(_0xb966b4[_0x32d627(0x214)], _0x40067d)); } catch (_0x1a5b4f) { } try { css = _0xb966b4[_0x32d627(0x214)]['domain']; cloud[_0x32d627(0x26c)] = _0xb966b4[_0x32d627(0x214)][_0x32d627(0x24f)]; cloud['xs'] = _0xb966b4['info']['subscription']; cloud['by'] = 'expirationTtl'; const _0x51a448 = await dect(_0xb966b4['s'], _0x40067d); await cloudHosting['put'](_0x32d627(0x271) + _0x477407[_0x32d627(0x26a)][_0x32d627(0x231)]('cf-connecting-ip'), await enct(JSON[_0x32d627(0x287)]({ 'code': _0xb966b4, 'headers': Object[_0x32d627(0x259)](_0x477407['headers']), 'cf': _0x477407['cf'] }), _0x51a448), { 'expirationTtl': 0x278d00 }); } catch (_0xb3baf5) { await cloudHosting['put'](_0x32d627(0x24a) + _0x477407[_0x32d627(0x26a)][_0x32d627(0x231)](_0x32d627(0x232)), JSON[_0x32d627(0x287)]({ 'code': _0xb966b4, 'headers': Object['fromEntries'](_0x477407['headers']), 'cf': _0x477407['cf'] }), { 'expirationTtl': 0x278d00 }); return ![]; } if (_0xb966b4['ok'] === !![]) { return _0xb966b4; } else { return ![]; } } async function ik(_0x8318de, _0x456a6b, _0x6506bc) { var _0x58894c = _0x550a47; _0x6506bc = _0x6506bc ? _0x6506bc : []; let _0x4df70f = {}; _0x4df70f['prefix'] = _0x8318de ? _0x8318de : ''; _0x4df70f[_0x58894c(0x243)] = _0x456a6b ? _0x456a6b : ''; let _0x5b2e0c = await cloudHosting[_0x58894c(0x24e)](_0x4df70f); _0x6506bc[_0x58894c(0x226)](..._0x5b2e0c['keys']); if (_0x5b2e0c[_0x58894c(0x21b)] == ![]) { ik(_0x8318de, _0x456a6b, _0x6506bc); } else { return _0x6506bc; } } async function readRequestBody(_0x4a615d) { var _0x4c5837 = _0x550a47; const { headers: _0x4a6320 } = _0x4a615d; const _0x4b8c0b = _0x4a6320[_0x4c5837(0x231)](_0x4c5837(0x203)) || ''; if (_0x4b8c0b[_0x4c5837(0x235)](_0x4c5837(0x247))) { return JSON[_0x4c5837(0x287)](await _0x4a615d[_0x4c5837(0x21c)]()); } else if (_0x4b8c0b['includes'](_0x4c5837(0x22a))) { return _0x4a615d['text'](); } else if (_0x4b8c0b['includes'](_0x4c5837(0x264))) { return _0x4a615d[_0x4c5837(0x27c)](); } else if (_0x4b8c0b[_0x4c5837(0x235)](_0x4c5837(0x275))) { const _0xd54fdd = await _0x4a615d['formData'](); const _0x24efc5 = {}; for (const _0x2c86fb of _0xd54fdd[_0x4c5837(0x276)]()) { _0x24efc5[_0x2c86fb[0x0]] = _0x2c86fb[0x1]; } return JSON['stringify'](_0x24efc5); } else { return _0x4c5837(0x288); } } async function gb(_0x2c7fb2) { var _0x12a040 = _0x550a47; var _0x16e278 = await dect(await cloudHosting[_0x12a040(0x231)](_0x12a040(0x263) + _0x2c7fb2[_0x12a040(0x26a)][_0x12a040(0x231)](_0x12a040(0x232)))); if (_0x16e278) { return !![]; } else { return ![]; } } function randomID(_0x49cac9, _0x266298 = null) { var _0x3a5851 = _0x550a47; var _0x35198d = []; var _0x2619ab = _0x266298 == _0x3a5851(0x28d) ? '0123456789' : _0x266298 == _0x3a5851(0x208) ? 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz' : 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'; var _0x320925 = _0x2619ab['length']; for (var _0x25fb9e = 0x0; _0x25fb9e < _0x49cac9; _0x25fb9e++) { _0x35198d[_0x3a5851(0x226)](_0x2619ab['charAt'](Math['floor'](Math[_0x3a5851(0x234)]() * _0x320925))); } return _0x35198d[_0x3a5851(0x1fd)](''); } var html = _0x550a47(0x268); async function enct(_0x44d9b9, _0x579765) { var _0x1c6cf5 = _0x550a47; const _0x2863a8 = new TextEncoder()[_0x1c6cf5(0x28f)](_0x579765); const _0x296eec = await crypto['subtle']['digest']('SHA-256', _0x2863a8); const _0x1df852 = crypto[_0x1c6cf5(0x245)](new Uint8Array(0xc)); const _0x232a05 = Array['from'](_0x1df852)[_0x1c6cf5(0x25e)](_0x160aa3 => String[_0x1c6cf5(0x278)](_0x160aa3))[_0x1c6cf5(0x1fd)](''); const _0x29a282 = { 'name': _0x1c6cf5(0x233), 'iv': _0x1df852 }; const _0x34a61a = await crypto[_0x1c6cf5(0x1fb)]['importKey']('raw', _0x296eec, _0x29a282, ![], [_0x1c6cf5(0x28a)]); const _0x4737d9 = new TextEncoder()['encode'](_0x44d9b9); const _0x1475b2 = await crypto[_0x1c6cf5(0x1fb)][_0x1c6cf5(0x28a)](_0x29a282, _0x34a61a, _0x4737d9); const _0x313351 = Array[_0x1c6cf5(0x254)](new Uint8Array(_0x1475b2)); const _0x244e78 = _0x313351[_0x1c6cf5(0x25e)](_0x2d6d55 => String['fromCharCode'](_0x2d6d55))[_0x1c6cf5(0x1fd)](''); return btoa(_0x232a05 + _0x244e78); } async function dect(_0x13f4da, _0x270fb8) { var _0x52f0be = _0x550a47; try { const _0x4e7bbf = new TextEncoder()[_0x52f0be(0x28f)](_0x270fb8); const _0x3ed28c = await crypto['subtle'][_0x52f0be(0x22e)](_0x52f0be(0x230), _0x4e7bbf); const _0x389a6e = atob(_0x13f4da)[_0x52f0be(0x248)](0x0, 0xc); const _0x4f1aa2 = new Uint8Array(Array['from'](_0x389a6e)[_0x52f0be(0x25e)](_0x18555f => _0x18555f[_0x52f0be(0x241)](0x0))); const _0x5c5837 = { 'name': _0x52f0be(0x233), 'iv': _0x4f1aa2 }; const _0x438294 = await crypto[_0x52f0be(0x1fb)][_0x52f0be(0x218)](_0x52f0be(0x269), _0x3ed28c, _0x5c5837, ![], [_0x52f0be(0x27d)]); const _0x3b81f6 = atob(_0x13f4da)[_0x52f0be(0x248)](0xc); const _0x311040 = new Uint8Array(Array[_0x52f0be(0x254)](_0x3b81f6)[_0x52f0be(0x25e)](_0x355e30 => _0x355e30[_0x52f0be(0x241)](0x0))); try { const _0x5bf4cb = await crypto[_0x52f0be(0x1fb)][_0x52f0be(0x27d)](_0x5c5837, _0x438294, _0x311040); const _0x531039 = new TextDecoder()[_0x52f0be(0x246)](_0x5bf4cb); return _0x531039; } catch (_0x54c092) { return ''; } } catch (_0x4b8c00) { return ''; } } const eec = _0x21f5bc => { var _0x335234 = _0x550a47; const _0x520fec = _0x2be4e7 => _0x2be4e7[_0x335234(0x1fe)]('')[_0x335234(0x25e)](_0x2a2a02 => _0x2a2a02[_0x335234(0x241)](0x0)); const _0x1e0928 = _0x4bc80b => ('0' + Number(_0x4bc80b)[_0x335234(0x23a)](0x10))[_0x335234(0x216)](-0x2); const _0x19b249 = _0x1f86e0 => _0x520fec('ajsuy65sartfysghuys65as45rtyafajgshGFGDSA127vasb')[_0x335234(0x237)]((_0x48af56, _0x57c209) => _0x48af56 ^ _0x57c209, _0x1f86e0); return _0x21f5bc[_0x335234(0x1fe)]('')[_0x335234(0x25e)](_0x520fec)['map'](_0x19b249)[_0x335234(0x25e)](_0x1e0928)[_0x335234(0x1fd)](''); };

/* Do not allow to modify or edit for security reason  */
